{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        },
        "x-pulp-app-versions": {
            "core": "3.49.19",
            "certguard": "3.49.19",
            "file": "3.49.19",
            "rpm": "3.26.1",
            "deb": "3.2.1",
            "container": "2.20.3"
        },
        "x-pulp-domain-enabled": false
    },
    "paths": {
        "/pulp/api/v3/access_policies/": {
            "get": {
                "operationId": "access_policies_list",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "List access policys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "customized",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where customized matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-creation_hooks",
                                    "-customized",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-queryset_scoping",
                                    "-statements",
                                    "-viewset_name",
                                    "creation_hooks",
                                    "customized",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "queryset_scoping",
                                    "statements",
                                    "viewset_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `creation_hooks` - Creation hooks\n* `-creation_hooks` - Creation hooks (descending)\n* `statements` - Statements\n* `-statements` - Statements (descending)\n* `viewset_name` - Viewset name\n* `-viewset_name` - Viewset name (descending)\n* `customized` - Customized\n* `-customized` - Customized (descending)\n* `queryset_scoping` - Queryset scoping\n* `-queryset_scoping` - Queryset scoping (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "viewset_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where viewset_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccessPolicyResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}": {
            "get": {
                "operationId": "access_policies_read",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Inspect an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "access_policies_update",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "access_policies_partial_update",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}reset/": {
            "post": {
                "operationId": "access_policies_reset",
                "description": "Reset the access policy to its uncustomized default value.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/acs/file/file/": {
            "get": {
                "operationId": "acs_file_file_list",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "List file alternate content sources",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_refreshed",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "last_refreshed",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_refreshed` - Last refreshed\n* `-last_refreshed` - Last refreshed (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileAlternateContentSourceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "acs_file_file_create",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "Create a file alternate content source",
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}": {
            "get": {
                "operationId": "acs_file_file_read",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "Inspect a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "acs_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "acs_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "acs_file_file_delete",
                "description": "Trigger an asynchronous delete ACS task",
                "summary": "Delete a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}add_role/": {
            "post": {
                "operationId": "acs_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}list_roles/": {
            "get": {
                "operationId": "acs_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}my_permissions/": {
            "get": {
                "operationId": "acs_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}refresh/": {
            "post": {
                "operationId": "acs_file_file_refresh",
                "description": "Trigger an asynchronous task to create Alternate Content Source content.",
                "summary": "Refresh metadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}remove_role/": {
            "post": {
                "operationId": "acs_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/acs/rpm/rpm/": {
            "get": {
                "operationId": "acs_rpm_rpm_list",
                "description": "ViewSet for ACS.",
                "summary": "List rpm alternate content sources",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_refreshed",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "last_refreshed",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_refreshed` - Last refreshed\n* `-last_refreshed` - Last refreshed (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmAlternateContentSourceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "acs_rpm_rpm_create",
                "description": "ViewSet for ACS.",
                "summary": "Create a rpm alternate content source",
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}": {
            "get": {
                "operationId": "acs_rpm_rpm_read",
                "description": "ViewSet for ACS.",
                "summary": "Inspect a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "acs_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "acs_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "acs_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete ACS task",
                "summary": "Delete a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}add_role/": {
            "post": {
                "operationId": "acs_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}list_roles/": {
            "get": {
                "operationId": "acs_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}my_permissions/": {
            "get": {
                "operationId": "acs_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}refresh/": {
            "post": {
                "operationId": "acs_rpm_rpm_refresh",
                "description": "Trigger an asynchronous task to create Alternate Content Source content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}remove_role/": {
            "post": {
                "operationId": "acs_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/artifacts/": {
            "get": {
                "operationId": "artifacts_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List artifacts",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where md5 matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-file",
                                    "-md5",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-sha1",
                                    "-sha224",
                                    "-sha256",
                                    "-sha384",
                                    "-sha512",
                                    "-size",
                                    "-timestamp_of_interest",
                                    "file",
                                    "md5",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512",
                                    "size",
                                    "timestamp_of_interest"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `file` - File\n* `-file` - File (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `md5` - Md5\n* `-md5` - Md5 (descending)\n* `sha1` - Sha1\n* `-sha1` - Sha1 (descending)\n* `sha224` - Sha224\n* `-sha224` - Sha224 (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `sha384` - Sha384\n* `-sha384` - Sha384 (descending)\n* `sha512` - Sha512\n* `-sha512` - Sha512 (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Artifacts have been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha1",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha1 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha224",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha224 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha384",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha384 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha512",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha512 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "artifacts_create",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Create an artifact",
                "tags": [
                    "Artifacts"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_href}": {
            "get": {
                "operationId": "artifacts_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "artifacts_delete",
                "description": "Remove Artifact only if it is not associated with any Content.",
                "summary": "Delete an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/content/": {
            "get": {
                "operationId": "content_list",
                "description": "Endpoint to list all content.",
                "summary": "List content",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "container.blob",
                                "container.manifest",
                                "container.signature",
                                "container.tag",
                                "core.publishedmetadata",
                                "deb.generic",
                                "deb.installer_file_index",
                                "deb.installer_package",
                                "deb.package",
                                "deb.package_index",
                                "deb.package_release_component",
                                "deb.release",
                                "deb.release_architecture",
                                "deb.release_component",
                                "deb.release_file",
                                "deb.source_index",
                                "deb.source_package",
                                "deb.source_package_release_component",
                                "file.file",
                                "rpm.advisory",
                                "rpm.distribution_tree",
                                "rpm.modulemd",
                                "rpm.modulemd_defaults",
                                "rpm.modulemd_obsolete",
                                "rpm.package",
                                "rpm.packagecategory",
                                "rpm.packageenvironment",
                                "rpm.packagegroup",
                                "rpm.packagelangpacks",
                                "rpm.repo_metadata_file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `file.file` - file.file\n* `rpm.advisory` - rpm.advisory\n* `rpm.packagegroup` - rpm.packagegroup\n* `rpm.packagecategory` - rpm.packagecategory\n* `rpm.packageenvironment` - rpm.packageenvironment\n* `rpm.packagelangpacks` - rpm.packagelangpacks\n* `rpm.repo_metadata_file` - rpm.repo_metadata_file\n* `rpm.distribution_tree` - rpm.distribution_tree\n* `rpm.package` - rpm.package\n* `rpm.modulemd` - rpm.modulemd\n* `rpm.modulemd_defaults` - rpm.modulemd_defaults\n* `rpm.modulemd_obsolete` - rpm.modulemd_obsolete\n* `deb.package` - deb.package\n* `deb.installer_package` - deb.installer_package\n* `deb.generic` - deb.generic\n* `deb.source_package` - deb.source_package\n* `deb.release` - deb.release\n* `deb.release_architecture` - deb.release_architecture\n* `deb.release_component` - deb.release_component\n* `deb.package_release_component` - deb.package_release_component\n* `deb.source_package_release_component` - deb.source_package_release_component\n* `deb.release_file` - deb.release_file\n* `deb.package_index` - deb.package_index\n* `deb.installer_file_index` - deb.installer_file_index\n* `deb.source_index` - deb.source_index\n* `container.blob` - container.blob\n* `container.manifest` - container.manifest\n* `container.tag` - container.tag\n* `container.signature` - container.signature"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "container.blob",
                                    "container.manifest",
                                    "container.signature",
                                    "container.tag",
                                    "core.publishedmetadata",
                                    "deb.generic",
                                    "deb.installer_file_index",
                                    "deb.installer_package",
                                    "deb.package",
                                    "deb.package_index",
                                    "deb.package_release_component",
                                    "deb.release",
                                    "deb.release_architecture",
                                    "deb.release_component",
                                    "deb.release_file",
                                    "deb.source_index",
                                    "deb.source_package",
                                    "deb.source_package_release_component",
                                    "file.file",
                                    "rpm.advisory",
                                    "rpm.distribution_tree",
                                    "rpm.modulemd",
                                    "rpm.modulemd_defaults",
                                    "rpm.modulemd_obsolete",
                                    "rpm.package",
                                    "rpm.packagecategory",
                                    "rpm.packageenvironment",
                                    "rpm.packagegroup",
                                    "rpm.packagelangpacks",
                                    "rpm.repo_metadata_file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `file.file` - file.file\n* `rpm.advisory` - rpm.advisory\n* `rpm.packagegroup` - rpm.packagegroup\n* `rpm.packagecategory` - rpm.packagecategory\n* `rpm.packageenvironment` - rpm.packageenvironment\n* `rpm.packagelangpacks` - rpm.packagelangpacks\n* `rpm.repo_metadata_file` - rpm.repo_metadata_file\n* `rpm.distribution_tree` - rpm.distribution_tree\n* `rpm.package` - rpm.package\n* `rpm.modulemd` - rpm.modulemd\n* `rpm.modulemd_defaults` - rpm.modulemd_defaults\n* `rpm.modulemd_obsolete` - rpm.modulemd_obsolete\n* `deb.package` - deb.package\n* `deb.installer_package` - deb.installer_package\n* `deb.generic` - deb.generic\n* `deb.source_package` - deb.source_package\n* `deb.release` - deb.release\n* `deb.release_architecture` - deb.release_architecture\n* `deb.release_component` - deb.release_component\n* `deb.package_release_component` - deb.package_release_component\n* `deb.source_package_release_component` - deb.source_package_release_component\n* `deb.release_file` - deb.release_file\n* `deb.package_index` - deb.package_index\n* `deb.installer_file_index` - deb.installer_file_index\n* `deb.source_index` - deb.source_index\n* `container.blob` - container.blob\n* `container.manifest` - container.manifest\n* `container.tag` - container.tag\n* `container.signature` - container.signature",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMultipleArtifactContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/blobs/": {
            "get": {
                "operationId": "content_container_blobs_list",
                "description": "ViewSet for Blobs.",
                "summary": "List blobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.BlobResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_blob_href}": {
            "get": {
                "operationId": "content_container_blobs_read",
                "description": "ViewSet for Blobs.",
                "summary": "Inspect a blob",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_blob_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.BlobResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/manifests/": {
            "get": {
                "operationId": "content_container_manifests_list",
                "description": "ViewSet for Manifest.",
                "summary": "List manifests",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_bootable",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_bootable matches value"
                    },
                    {
                        "in": "query",
                        "name": "is_flatpak",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_flatpak matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "media_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "application/vnd.docker.distribution.manifest.list.v2+json",
                                    "application/vnd.docker.distribution.manifest.v1+json",
                                    "application/vnd.docker.distribution.manifest.v2+json",
                                    "application/vnd.oci.image.index.v1+json",
                                    "application/vnd.oci.image.manifest.v1+json"
                                ]
                            }
                        },
                        "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-annotations",
                                    "-data",
                                    "-digest",
                                    "-is_bootable",
                                    "-is_flatpak",
                                    "-labels",
                                    "-media_type",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-schema_version",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "annotations",
                                    "data",
                                    "digest",
                                    "is_bootable",
                                    "is_flatpak",
                                    "labels",
                                    "media_type",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "schema_version",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `schema_version` - Schema version\n* `-schema_version` - Schema version (descending)\n* `media_type` - Media type\n* `-media_type` - Media type (descending)\n* `data` - Data\n* `-data` - Data (descending)\n* `annotations` - Annotations\n* `-annotations` - Annotations (descending)\n* `labels` - Labels\n* `-labels` - Labels (descending)\n* `is_bootable` - Is bootable\n* `-is_bootable` - Is bootable (descending)\n* `is_flatpak` - Is flatpak\n* `-is_flatpak` - Is flatpak (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ManifestResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_manifest_href}": {
            "get": {
                "operationId": "content_container_manifests_read",
                "description": "ViewSet for Manifest.",
                "summary": "Inspect a manifest",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_manifest_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ManifestResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/signatures/": {
            "get": {
                "operationId": "content_container_signatures_list",
                "description": "ViewSet for image signatures.",
                "summary": "List manifest signatures",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "key_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where key_id matches value"
                    },
                    {
                        "in": "query",
                        "name": "key_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where key_id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "manifest",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-creator",
                                    "-data",
                                    "-digest",
                                    "-key_id",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp",
                                    "-timestamp_of_interest",
                                    "-type",
                                    "-upstream_id",
                                    "creator",
                                    "data",
                                    "digest",
                                    "key_id",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp",
                                    "timestamp_of_interest",
                                    "type",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `type` - Type\n* `-type` - Type (descending)\n* `key_id` - Key id\n* `-key_id` - Key id (descending)\n* `timestamp` - Timestamp\n* `-timestamp` - Timestamp (descending)\n* `creator` - Creator\n* `-creator` - Creator (descending)\n* `data` - Data\n* `-data` - Data (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Signatures"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ManifestSignatureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_manifest_signature_href}": {
            "get": {
                "operationId": "content_container_signatures_read",
                "description": "ViewSet for image signatures.",
                "summary": "Inspect a manifest signature",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_manifest_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Signatures"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ManifestSignatureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/tags/": {
            "get": {
                "operationId": "content_container_tags_list",
                "description": "ViewSet for Tag.",
                "summary": "List tags",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "media_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "application/vnd.docker.distribution.manifest.list.v2+json",
                                    "application/vnd.docker.distribution.manifest.v1+json",
                                    "application/vnd.docker.distribution.manifest.v2+json",
                                    "application/vnd.oci.image.index.v1+json",
                                    "application/vnd.oci.image.manifest.v1+json"
                                ]
                            }
                        },
                        "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.TagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_tag_href}": {
            "get": {
                "operationId": "content_container_tags_read",
                "description": "ViewSet for Tag.",
                "summary": "Inspect a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_tag_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.TagResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/generic_contents/": {
            "get": {
                "operationId": "content_deb_generic_contents_list",
                "description": "GenericContent is a catch all category for storing files not covered by any other type.\n\nAssociated artifacts: Exactly one arbitrary file that does not match any other type.\n\nThis is needed to store arbitrary files for use with the verbatim publisher. If you are not\nusing the verbatim publisher, you may ignore this type.",
                "summary": "List generic contents",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Generic_Contents"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.GenericContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_generic_contents_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a generic content",
                "tags": [
                    "Content: Generic_Contents"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.GenericContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.GenericContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_generic_content_href}": {
            "get": {
                "operationId": "content_deb_generic_contents_read",
                "description": "GenericContent is a catch all category for storing files not covered by any other type.\n\nAssociated artifacts: Exactly one arbitrary file that does not match any other type.\n\nThis is needed to store arbitrary files for use with the verbatim publisher. If you are not\nusing the verbatim publisher, you may ignore this type.",
                "summary": "Inspect a generic content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_generic_content_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Generic_Contents"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.GenericContentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/installer_file_indices/": {
            "get": {
                "operationId": "content_deb_installer_file_indices_list",
                "description": "An InstallerFileIndex represents the indices for a set of installer files.\n\nAssociated artifacts: Exactly one 'SHA256SUMS' and/or 'MD5SUMS' file.\n\nEach InstallerFileIndes is associated with a single component-architecture combination within\na single Release. Note that installer files are currently used exclusively for verbatim\npublications. The APT publisher (both simple and structured mode) does not make use of installer\ncontent.",
                "summary": "List InstallerFileIndices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where component matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-component",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "architecture",
                                    "component",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `component` - Component\n* `-component` - Component (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Installer_File_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.InstallerFileIndexResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_installer_file_indices_create",
                "description": "An InstallerFileIndex represents the indices for a set of installer files.\n\nAssociated artifacts: Exactly one 'SHA256SUMS' and/or 'MD5SUMS' file.\n\nEach InstallerFileIndes is associated with a single component-architecture combination within\na single Release. Note that installer files are currently used exclusively for verbatim\npublications. The APT publisher (both simple and structured mode) does not make use of installer\ncontent.",
                "summary": "Create an installer file index",
                "tags": [
                    "Content: Installer_File_Indices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.InstallerFileIndex"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.InstallerFileIndex"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.InstallerFileIndex"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.InstallerFileIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_installer_file_index_href}": {
            "get": {
                "operationId": "content_deb_installer_file_indices_read",
                "description": "An InstallerFileIndex represents the indices for a set of installer files.\n\nAssociated artifacts: Exactly one 'SHA256SUMS' and/or 'MD5SUMS' file.\n\nEach InstallerFileIndes is associated with a single component-architecture combination within\na single Release. Note that installer files are currently used exclusively for verbatim\npublications. The APT publisher (both simple and structured mode) does not make use of installer\ncontent.",
                "summary": "Inspect an installer file index",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_installer_file_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Installer_File_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.InstallerFileIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/installer_packages/": {
            "get": {
                "operationId": "content_deb_installer_packages_list",
                "description": "An InstallerPackage represents a '.udeb' installer package.\n\nAssociated artifacts: Exactly one '.udeb' installer package file.\n\nNote that installer packages are currently used exclusively for verbatim publications. The APT\npublisher (both simple and structured mode) will not include these packages.",
                "summary": "List installer packages",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "auto_built_package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where auto_built_package matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_essential",
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "enum": [
                                false,
                                true
                            ]
                        },
                        "description": "Filter results where build_essential matches value\n\n* `True` - yes\n* `False` - no"
                    },
                    {
                        "in": "query",
                        "name": "built_using",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where built_using matches value"
                    },
                    {
                        "in": "query",
                        "name": "essential",
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "enum": [
                                false,
                                true
                            ]
                        },
                        "description": "Filter results where essential matches value\n\n* `True` - yes\n* `False` - no"
                    },
                    {
                        "in": "query",
                        "name": "installed_size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where installed_size matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "maintainer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where maintainer matches value"
                    },
                    {
                        "in": "query",
                        "name": "multi_arch",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "allowed",
                                "foreign",
                                "no",
                                "same"
                            ]
                        },
                        "description": "Filter results where multi_arch matches value\n\n* `no` - no\n* `same` - same\n* `foreign` - foreign\n* `allowed` - allowed"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-auto_built_package",
                                    "-breaks",
                                    "-bugs",
                                    "-build_essential",
                                    "-built_using",
                                    "-conflicts",
                                    "-custom_fields",
                                    "-depends",
                                    "-description",
                                    "-description_md5",
                                    "-enhances",
                                    "-essential",
                                    "-homepage",
                                    "-installed_size",
                                    "-maintainer",
                                    "-multi_arch",
                                    "-origin",
                                    "-original_maintainer",
                                    "-package",
                                    "-pk",
                                    "-pre_depends",
                                    "-priority",
                                    "-provides",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-recommends",
                                    "-relative_path",
                                    "-replaces",
                                    "-section",
                                    "-sha256",
                                    "-source",
                                    "-suggests",
                                    "-tag",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "architecture",
                                    "auto_built_package",
                                    "breaks",
                                    "bugs",
                                    "build_essential",
                                    "built_using",
                                    "conflicts",
                                    "custom_fields",
                                    "depends",
                                    "description",
                                    "description_md5",
                                    "enhances",
                                    "essential",
                                    "homepage",
                                    "installed_size",
                                    "maintainer",
                                    "multi_arch",
                                    "origin",
                                    "original_maintainer",
                                    "package",
                                    "pk",
                                    "pre_depends",
                                    "priority",
                                    "provides",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "recommends",
                                    "relative_path",
                                    "replaces",
                                    "section",
                                    "sha256",
                                    "source",
                                    "suggests",
                                    "tag",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `package` - Package\n* `-package` - Package (descending)\n* `source` - Source\n* `-source` - Source (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `section` - Section\n* `-section` - Section (descending)\n* `priority` - Priority\n* `-priority` - Priority (descending)\n* `origin` - Origin\n* `-origin` - Origin (descending)\n* `tag` - Tag\n* `-tag` - Tag (descending)\n* `bugs` - Bugs\n* `-bugs` - Bugs (descending)\n* `essential` - Essential\n* `-essential` - Essential (descending)\n* `build_essential` - Build essential\n* `-build_essential` - Build essential (descending)\n* `installed_size` - Installed size\n* `-installed_size` - Installed size (descending)\n* `maintainer` - Maintainer\n* `-maintainer` - Maintainer (descending)\n* `original_maintainer` - Original maintainer\n* `-original_maintainer` - Original maintainer (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `description_md5` - Description md5\n* `-description_md5` - Description md5 (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `built_using` - Built using\n* `-built_using` - Built using (descending)\n* `auto_built_package` - Auto built package\n* `-auto_built_package` - Auto built package (descending)\n* `multi_arch` - Multi arch\n* `-multi_arch` - Multi arch (descending)\n* `breaks` - Breaks\n* `-breaks` - Breaks (descending)\n* `conflicts` - Conflicts\n* `-conflicts` - Conflicts (descending)\n* `depends` - Depends\n* `-depends` - Depends (descending)\n* `recommends` - Recommends\n* `-recommends` - Recommends (descending)\n* `suggests` - Suggests\n* `-suggests` - Suggests (descending)\n* `enhances` - Enhances\n* `-enhances` - Enhances (descending)\n* `pre_depends` - Pre depends\n* `-pre_depends` - Pre depends (descending)\n* `provides` - Provides\n* `-provides` - Provides (descending)\n* `replaces` - Replaces\n* `-replaces` - Replaces (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `custom_fields` - Custom fields\n* `-custom_fields` - Custom fields (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "origin",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where origin matches value"
                    },
                    {
                        "in": "query",
                        "name": "original_maintainer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where original_maintainer matches value"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package matches value"
                    },
                    {
                        "in": "query",
                        "name": "priority",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where priority matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "section",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where section matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where source matches value"
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where tag matches value"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Installer_Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.InstallerPackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_installer_packages_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an installer package",
                "tags": [
                    "Content: Installer_Packages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.InstallerPackage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.InstallerPackage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_installer_package_href}": {
            "get": {
                "operationId": "content_deb_installer_packages_read",
                "description": "An InstallerPackage represents a '.udeb' installer package.\n\nAssociated artifacts: Exactly one '.udeb' installer package file.\n\nNote that installer packages are currently used exclusively for verbatim publications. The APT\npublisher (both simple and structured mode) will not include these packages.",
                "summary": "Inspect an installer package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_installer_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Installer_Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.InstallerPackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/package_indices/": {
            "get": {
                "operationId": "content_deb_package_indices_list",
                "description": "A PackageIndex represents the package indices of a single component-architecture combination.\n\nAssociated artifacts: Exactly one 'Packages' file. May optionally include one or more of\n'Packages.gz', 'Packages.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Packages' files it needs when creating the\npublication. It does not make use of PackageIndex content.",
                "summary": "List PackageIndices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where component matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-artifact_set_sha256",
                                    "-component",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "architecture",
                                    "artifact_set_sha256",
                                    "component",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `component` - Component\n* `-component` - Component (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `artifact_set_sha256` - Artifact set sha256\n* `-artifact_set_sha256` - Artifact set sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Package_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.PackageIndexResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_package_indices_create",
                "description": "A PackageIndex represents the package indices of a single component-architecture combination.\n\nAssociated artifacts: Exactly one 'Packages' file. May optionally include one or more of\n'Packages.gz', 'Packages.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Packages' files it needs when creating the\npublication. It does not make use of PackageIndex content.",
                "summary": "Create a package index",
                "tags": [
                    "Content: Package_Indices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageIndex"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageIndex"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageIndex"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.PackageIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_package_index_href}": {
            "get": {
                "operationId": "content_deb_package_indices_read",
                "description": "A PackageIndex represents the package indices of a single component-architecture combination.\n\nAssociated artifacts: Exactly one 'Packages' file. May optionally include one or more of\n'Packages.gz', 'Packages.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Packages' files it needs when creating the\npublication. It does not make use of PackageIndex content.",
                "summary": "Inspect a package index",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_package_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Package_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.PackageIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/package_release_components/": {
            "get": {
                "operationId": "content_deb_package_release_components_list",
                "description": "A PackageReleaseComponent associates a Package with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information which packages are part of which components.",
                "summary": "List package release components",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where package matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "release_component",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where release_component matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Package_Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.PackageReleaseComponentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_package_release_components_create",
                "description": "A PackageReleaseComponent associates a Package with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information which packages are part of which components.",
                "summary": "Create a package release component",
                "tags": [
                    "Content: Package_Release_Components"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageReleaseComponent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageReleaseComponent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.PackageReleaseComponent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.PackageReleaseComponentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_package_release_component_href}": {
            "get": {
                "operationId": "content_deb_package_release_components_read",
                "description": "A PackageReleaseComponent associates a Package with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information which packages are part of which components.",
                "summary": "Inspect a package release component",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_package_release_component_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Package_Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.PackageReleaseComponentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/packages/": {
            "get": {
                "operationId": "content_deb_packages_list",
                "description": "A Package represents a '.deb' binary package.\n\nAssociated artifacts: Exactly one '.deb' package file.",
                "summary": "List packages",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "auto_built_package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where auto_built_package matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_essential",
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "enum": [
                                false,
                                true
                            ]
                        },
                        "description": "Filter results where build_essential matches value\n\n* `True` - yes\n* `False` - no"
                    },
                    {
                        "in": "query",
                        "name": "built_using",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where built_using matches value"
                    },
                    {
                        "in": "query",
                        "name": "essential",
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "enum": [
                                false,
                                true
                            ]
                        },
                        "description": "Filter results where essential matches value\n\n* `True` - yes\n* `False` - no"
                    },
                    {
                        "in": "query",
                        "name": "installed_size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where installed_size matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "maintainer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where maintainer matches value"
                    },
                    {
                        "in": "query",
                        "name": "multi_arch",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "allowed",
                                "foreign",
                                "no",
                                "same"
                            ]
                        },
                        "description": "Filter results where multi_arch matches value\n\n* `no` - no\n* `same` - same\n* `foreign` - foreign\n* `allowed` - allowed"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-auto_built_package",
                                    "-breaks",
                                    "-bugs",
                                    "-build_essential",
                                    "-built_using",
                                    "-conflicts",
                                    "-custom_fields",
                                    "-depends",
                                    "-description",
                                    "-description_md5",
                                    "-enhances",
                                    "-essential",
                                    "-homepage",
                                    "-installed_size",
                                    "-maintainer",
                                    "-multi_arch",
                                    "-origin",
                                    "-original_maintainer",
                                    "-package",
                                    "-pk",
                                    "-pre_depends",
                                    "-priority",
                                    "-provides",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-recommends",
                                    "-relative_path",
                                    "-replaces",
                                    "-section",
                                    "-sha256",
                                    "-source",
                                    "-suggests",
                                    "-tag",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "architecture",
                                    "auto_built_package",
                                    "breaks",
                                    "bugs",
                                    "build_essential",
                                    "built_using",
                                    "conflicts",
                                    "custom_fields",
                                    "depends",
                                    "description",
                                    "description_md5",
                                    "enhances",
                                    "essential",
                                    "homepage",
                                    "installed_size",
                                    "maintainer",
                                    "multi_arch",
                                    "origin",
                                    "original_maintainer",
                                    "package",
                                    "pk",
                                    "pre_depends",
                                    "priority",
                                    "provides",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "recommends",
                                    "relative_path",
                                    "replaces",
                                    "section",
                                    "sha256",
                                    "source",
                                    "suggests",
                                    "tag",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `package` - Package\n* `-package` - Package (descending)\n* `source` - Source\n* `-source` - Source (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `section` - Section\n* `-section` - Section (descending)\n* `priority` - Priority\n* `-priority` - Priority (descending)\n* `origin` - Origin\n* `-origin` - Origin (descending)\n* `tag` - Tag\n* `-tag` - Tag (descending)\n* `bugs` - Bugs\n* `-bugs` - Bugs (descending)\n* `essential` - Essential\n* `-essential` - Essential (descending)\n* `build_essential` - Build essential\n* `-build_essential` - Build essential (descending)\n* `installed_size` - Installed size\n* `-installed_size` - Installed size (descending)\n* `maintainer` - Maintainer\n* `-maintainer` - Maintainer (descending)\n* `original_maintainer` - Original maintainer\n* `-original_maintainer` - Original maintainer (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `description_md5` - Description md5\n* `-description_md5` - Description md5 (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `built_using` - Built using\n* `-built_using` - Built using (descending)\n* `auto_built_package` - Auto built package\n* `-auto_built_package` - Auto built package (descending)\n* `multi_arch` - Multi arch\n* `-multi_arch` - Multi arch (descending)\n* `breaks` - Breaks\n* `-breaks` - Breaks (descending)\n* `conflicts` - Conflicts\n* `-conflicts` - Conflicts (descending)\n* `depends` - Depends\n* `-depends` - Depends (descending)\n* `recommends` - Recommends\n* `-recommends` - Recommends (descending)\n* `suggests` - Suggests\n* `-suggests` - Suggests (descending)\n* `enhances` - Enhances\n* `-enhances` - Enhances (descending)\n* `pre_depends` - Pre depends\n* `-pre_depends` - Pre depends (descending)\n* `provides` - Provides\n* `-provides` - Provides (descending)\n* `replaces` - Replaces\n* `-replaces` - Replaces (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `custom_fields` - Custom fields\n* `-custom_fields` - Custom fields (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "origin",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where origin matches value"
                    },
                    {
                        "in": "query",
                        "name": "original_maintainer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where original_maintainer matches value"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package matches value"
                    },
                    {
                        "in": "query",
                        "name": "package__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package contains value"
                    },
                    {
                        "in": "query",
                        "name": "package__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package contains value"
                    },
                    {
                        "in": "query",
                        "name": "package__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package matches value"
                    },
                    {
                        "in": "query",
                        "name": "package__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where package is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "package__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "package__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package starts with value"
                    },
                    {
                        "in": "query",
                        "name": "package__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "package__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package starts with value"
                    },
                    {
                        "in": "query",
                        "name": "priority",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where priority matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "release",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"release_href,repository_or_repository_version_href\"\n    release_href: Filter results where Package in Release\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "release_component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"release_component_href,repository_or_repository_version_href\"\n    release_component_href: Filter results where Package in ReleaseComponent\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "section",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where section matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where source matches value"
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where tag matches value"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.PackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_packages_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a package",
                "tags": [
                    "Content: Packages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.Package"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.Package"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_package_href}": {
            "get": {
                "operationId": "content_deb_packages_read",
                "description": "A Package represents a '.deb' binary package.\n\nAssociated artifacts: Exactly one '.deb' package file.",
                "summary": "Inspect a package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.PackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/release_architectures/": {
            "get": {
                "operationId": "content_deb_release_architectures_list",
                "description": "A ReleaseArchitecture represents a single dpkg architecture string.\n\nAssociated artifacts: None; contains only metadata.\n\nEvery ReleaseArchitecture is always associated with exactly one Release. This indicates that\nthe release/distribution in question supports this architecture.",
                "summary": "List release architectures",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where distribution matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-distribution",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "architecture",
                                    "distribution",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `distribution` - Distribution\n* `-distribution` - Distribution (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Architectures"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.ReleaseArchitectureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_release_architectures_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a release architecture",
                "tags": [
                    "Content: Release_Architectures"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseArchitecture"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseArchitecture"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseArchitecture"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_release_architecture_href}": {
            "get": {
                "operationId": "content_deb_release_architectures_read",
                "description": "A ReleaseArchitecture represents a single dpkg architecture string.\n\nAssociated artifacts: None; contains only metadata.\n\nEvery ReleaseArchitecture is always associated with exactly one Release. This indicates that\nthe release/distribution in question supports this architecture.",
                "summary": "Inspect a release architecture",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_release_architecture_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Architectures"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseArchitectureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/release_components/": {
            "get": {
                "operationId": "content_deb_release_components_list",
                "description": "A ReleaseComponent represents a single APT repository component.\n\nAssociated artifacts: None; contains only metadata.",
                "summary": "List release components",
                "parameters": [
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where component matches value"
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where distribution matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-component",
                                    "-distribution",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "component",
                                    "distribution",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `distribution` - Distribution\n* `-distribution` - Distribution (descending)\n* `component` - Component\n* `-component` - Component (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"package_href,repository_or_repository_version_href\"\n    package_href: Filter results where ReleaseComponent contains Package\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.ReleaseComponentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_release_components_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a release component",
                "tags": [
                    "Content: Release_Components"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseComponent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseComponent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseComponent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_release_component_href}": {
            "get": {
                "operationId": "content_deb_release_components_read",
                "description": "A ReleaseComponent represents a single APT repository component.\n\nAssociated artifacts: None; contains only metadata.",
                "summary": "Inspect a release component",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_release_component_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseComponentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/release_files/": {
            "get": {
                "operationId": "content_deb_release_files_list",
                "description": "A ReleaseFile represents the Release file(s) from a single APT distribution.\n\nAssociated artifacts: At least one of 'Release' and 'InRelease' file. If the 'Release' file is\npresent, then there may also be a 'Release.gpg' detached signature file for it.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Release' files it needs when creating the\npublication. It does not make use of ReleaseFile content.",
                "summary": "List release files",
                "parameters": [
                    {
                        "in": "query",
                        "name": "codename",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where codename matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architectures",
                                    "-artifact_set_sha256",
                                    "-codename",
                                    "-components",
                                    "-distribution",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-sha256",
                                    "-suite",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "architectures",
                                    "artifact_set_sha256",
                                    "codename",
                                    "components",
                                    "distribution",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "sha256",
                                    "suite",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `codename` - Codename\n* `-codename` - Codename (descending)\n* `suite` - Suite\n* `-suite` - Suite (descending)\n* `distribution` - Distribution\n* `-distribution` - Distribution (descending)\n* `components` - Components\n* `-components` - Components (descending)\n* `architectures` - Architectures\n* `-architectures` - Architectures (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `artifact_set_sha256` - Artifact set sha256\n* `-artifact_set_sha256` - Artifact set sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "suite",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where suite matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.ReleaseFileResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_release_files_create",
                "description": "A ReleaseFile represents the Release file(s) from a single APT distribution.\n\nAssociated artifacts: At least one of 'Release' and 'InRelease' file. If the 'Release' file is\npresent, then there may also be a 'Release.gpg' detached signature file for it.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Release' files it needs when creating the\npublication. It does not make use of ReleaseFile content.",
                "summary": "Create a release file",
                "tags": [
                    "Content: Release_Files"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseFile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseFile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.ReleaseFile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseFileResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_release_file_href}": {
            "get": {
                "operationId": "content_deb_release_files_read",
                "description": "A ReleaseFile represents the Release file(s) from a single APT distribution.\n\nAssociated artifacts: At least one of 'Release' and 'InRelease' file. If the 'Release' file is\npresent, then there may also be a 'Release.gpg' detached signature file for it.\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Release' files it needs when creating the\npublication. It does not make use of ReleaseFile content.",
                "summary": "Inspect a release file",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_release_file_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Release_Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseFileResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/releases/": {
            "get": {
                "operationId": "content_deb_releases_list",
                "description": "The Release contains release file fields, that are not relevant to the APT repo structure.\n\nAssociated artifacts: None; contains only metadata.\n\nBy non-structure relevant release file fields, we mean anything other than the Components and\nArchitectures fields. These are handled by their own models and are not part of this model.\n\nNote that the distribution field is part of this model, but is not added to any published\nrelease files. The \"distribution\" is defined as the path between 'dists/' and some 'Release'\nfile. As such, it encodes the path to the relevant release file within the APT repository.\nIt is often (but not always) equal to the \"codename\" or the \"suite\".",
                "summary": "List releases",
                "parameters": [
                    {
                        "in": "query",
                        "name": "codename",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where codename matches value"
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where distribution matches value"
                    },
                    {
                        "in": "query",
                        "name": "label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where label matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-codename",
                                    "-description",
                                    "-distribution",
                                    "-label",
                                    "-origin",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-suite",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "codename",
                                    "description",
                                    "distribution",
                                    "label",
                                    "origin",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "suite",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `codename` - Codename\n* `-codename` - Codename (descending)\n* `suite` - Suite\n* `-suite` - Suite (descending)\n* `distribution` - Distribution\n* `-distribution` - Distribution (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `origin` - Origin\n* `-origin` - Origin (descending)\n* `label` - Label\n* `-label` - Label (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "origin",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where origin matches value"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"package_href,repository_or_repository_version_href\"\n    package_href: Filter results where Release contains Package\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "suite",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where suite matches value"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Releases"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.ReleaseResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_releases_create",
                "description": "The Release contains release file fields, that are not relevant to the APT repo structure.\n\nAssociated artifacts: None; contains only metadata.\n\nBy non-structure relevant release file fields, we mean anything other than the Components and\nArchitectures fields. These are handled by their own models and are not part of this model.\n\nNote that the distribution field is part of this model, but is not added to any published\nrelease files. The \"distribution\" is defined as the path between 'dists/' and some 'Release'\nfile. As such, it encodes the path to the relevant release file within the APT repository.\nIt is often (but not always) equal to the \"codename\" or the \"suite\".",
                "summary": "Create a release",
                "tags": [
                    "Content: Releases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.Release"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.Release"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.Release"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_release_href}": {
            "get": {
                "operationId": "content_deb_releases_read",
                "description": "The Release contains release file fields, that are not relevant to the APT repo structure.\n\nAssociated artifacts: None; contains only metadata.\n\nBy non-structure relevant release file fields, we mean anything other than the Components and\nArchitectures fields. These are handled by their own models and are not part of this model.\n\nNote that the distribution field is part of this model, but is not added to any published\nrelease files. The \"distribution\" is defined as the path between 'dists/' and some 'Release'\nfile. As such, it encodes the path to the relevant release file within the APT repository.\nIt is often (but not always) equal to the \"codename\" or the \"suite\".",
                "summary": "Inspect a release",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_release_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Releases"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.ReleaseResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/source_indices/": {
            "get": {
                "operationId": "content_deb_source_indices_list",
                "description": "A SourceIndex represents the source indices of a single component.\n\nAssociated artifacts: Exactly one 'Sources' file. May optionally include one or more of\n'Sources.gz', 'Sources.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file (with architecture always being 'source').\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Sources' files it needs when creating the\npublication. It does not make use of SourceIndex content.",
                "summary": "List SourceIndices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where component matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-component",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "component",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `component` - Component\n* `-component` - Component (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.SourceIndexResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_source_indices_create",
                "description": "A SourceIndex represents the source indices of a single component.\n\nAssociated artifacts: Exactly one 'Sources' file. May optionally include one or more of\n'Sources.gz', 'Sources.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file (with architecture always being 'source').\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Sources' files it needs when creating the\npublication. It does not make use of SourceIndex content.",
                "summary": "Create a source index",
                "tags": [
                    "Content: Source_Indices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourceIndex"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourceIndex"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourceIndex"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.SourceIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_source_index_href}": {
            "get": {
                "operationId": "content_deb_source_indices_read",
                "description": "A SourceIndex represents the source indices of a single component.\n\nAssociated artifacts: Exactly one 'Sources' file. May optionally include one or more of\n'Sources.gz', 'Sources.xz', 'Release'. If included, the 'Release' file is a legacy\nper-component-and-architecture Release file (with architecture always being 'source').\n\nNote: The verbatim publisher will republish all associated artifacts, while the APT publisher\n(both simple and structured mode) will generate any 'Sources' files it needs when creating the\npublication. It does not make use of SourceIndex content.",
                "summary": "Inspect a source index",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_source_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Indices"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.SourceIndexResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/source_packages/": {
            "get": {
                "operationId": "content_deb_source_packages_list",
                "description": "A Debian Source Package file represents a '.dsc' file along with its associated\nartifacts such as orig.tar.gz, debian.tar.gz...\n\nAssociated artifacts: Exactly one '.dsc' file.",
                "summary": "List source packages",
                "parameters": [
                    {
                        "in": "query",
                        "name": "architecture",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where architecture matches value"
                    },
                    {
                        "in": "query",
                        "name": "binary",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where binary matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_conflicts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_conflicts matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_conflicts_arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_conflicts_arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_conflicts_indep",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_conflicts_indep matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_depends",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_depends matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_depends_arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_depends_arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "build_depends_indep",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where build_depends_indep matches value"
                    },
                    {
                        "in": "query",
                        "name": "dgit",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where dgit matches value"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where format matches value"
                    },
                    {
                        "in": "query",
                        "name": "homepage",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where homepage matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "maintainer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where maintainer matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-architecture",
                                    "-binary",
                                    "-build_conflicts",
                                    "-build_conflicts_arch",
                                    "-build_conflicts_indep",
                                    "-build_depends",
                                    "-build_depends_arch",
                                    "-build_depends_indep",
                                    "-dgit",
                                    "-format",
                                    "-homepage",
                                    "-maintainer",
                                    "-package_list",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-source",
                                    "-standards_version",
                                    "-testsuite",
                                    "-timestamp_of_interest",
                                    "-uploaders",
                                    "-upstream_id",
                                    "-vcs_arch",
                                    "-vcs_browser",
                                    "-vcs_bzr",
                                    "-vcs_cvs",
                                    "-vcs_darcs",
                                    "-vcs_git",
                                    "-vcs_hg",
                                    "-vcs_mtn",
                                    "-vcs_snv",
                                    "-version",
                                    "architecture",
                                    "binary",
                                    "build_conflicts",
                                    "build_conflicts_arch",
                                    "build_conflicts_indep",
                                    "build_depends",
                                    "build_depends_arch",
                                    "build_depends_indep",
                                    "dgit",
                                    "format",
                                    "homepage",
                                    "maintainer",
                                    "package_list",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "source",
                                    "standards_version",
                                    "testsuite",
                                    "timestamp_of_interest",
                                    "uploaders",
                                    "upstream_id",
                                    "vcs_arch",
                                    "vcs_browser",
                                    "vcs_bzr",
                                    "vcs_cvs",
                                    "vcs_darcs",
                                    "vcs_git",
                                    "vcs_hg",
                                    "vcs_mtn",
                                    "vcs_snv",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `format` - Format\n* `-format` - Format (descending)\n* `source` - Source\n* `-source` - Source (descending)\n* `binary` - Binary\n* `-binary` - Binary (descending)\n* `architecture` - Architecture\n* `-architecture` - Architecture (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `maintainer` - Maintainer\n* `-maintainer` - Maintainer (descending)\n* `uploaders` - Uploaders\n* `-uploaders` - Uploaders (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `vcs_browser` - Vcs browser\n* `-vcs_browser` - Vcs browser (descending)\n* `vcs_arch` - Vcs arch\n* `-vcs_arch` - Vcs arch (descending)\n* `vcs_bzr` - Vcs bzr\n* `-vcs_bzr` - Vcs bzr (descending)\n* `vcs_cvs` - Vcs cvs\n* `-vcs_cvs` - Vcs cvs (descending)\n* `vcs_darcs` - Vcs darcs\n* `-vcs_darcs` - Vcs darcs (descending)\n* `vcs_git` - Vcs git\n* `-vcs_git` - Vcs git (descending)\n* `vcs_hg` - Vcs hg\n* `-vcs_hg` - Vcs hg (descending)\n* `vcs_mtn` - Vcs mtn\n* `-vcs_mtn` - Vcs mtn (descending)\n* `vcs_snv` - Vcs snv\n* `-vcs_snv` - Vcs snv (descending)\n* `testsuite` - Testsuite\n* `-testsuite` - Testsuite (descending)\n* `dgit` - Dgit\n* `-dgit` - Dgit (descending)\n* `standards_version` - Standards version\n* `-standards_version` - Standards version (descending)\n* `build_depends` - Build depends\n* `-build_depends` - Build depends (descending)\n* `build_depends_indep` - Build depends indep\n* `-build_depends_indep` - Build depends indep (descending)\n* `build_depends_arch` - Build depends arch\n* `-build_depends_arch` - Build depends arch (descending)\n* `build_conflicts` - Build conflicts\n* `-build_conflicts` - Build conflicts (descending)\n* `build_conflicts_indep` - Build conflicts indep\n* `-build_conflicts_indep` - Build conflicts indep (descending)\n* `build_conflicts_arch` - Build conflicts arch\n* `-build_conflicts_arch` - Build conflicts arch (descending)\n* `package_list` - Package list\n* `-package_list` - Package list (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "package_list",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where package_list matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "release",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"release_href,repository_or_repository_version_href\"\n    release_href: Filter results where SourcePackage in Release\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "release_component",
                        "schema": {
                            "type": "string"
                        },
                        "description": "\n    Must be a comma-separated string: \"release_component_href,repository_or_repository_version_href\"\n    release_component_href: Filter results where SourcePackage in ReleaseComponent\n    repository_or_repository_version_href: The RepositoryVersion href to filter by, or Repository\n        href (assume latest version)\n    "
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where source matches value"
                    },
                    {
                        "in": "query",
                        "name": "standards_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where standards_version matches value"
                    },
                    {
                        "in": "query",
                        "name": "testsuite",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where testsuite matches value"
                    },
                    {
                        "in": "query",
                        "name": "uploaders",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where uploaders matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_browser",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_browser matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_bzr",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_bzr matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_cvs",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_cvs matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_darcs",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_darcs matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_git",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_git matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_hg",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_hg matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_mtn",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_mtn matches value"
                    },
                    {
                        "in": "query",
                        "name": "vcs_snv",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where vcs_snv matches value"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.SourcePackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_source_packages_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a source package",
                "tags": [
                    "Content: Source_Packages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_source_package_href}": {
            "get": {
                "operationId": "content_deb_source_packages_read",
                "description": "A Debian Source Package file represents a '.dsc' file along with its associated\nartifacts such as orig.tar.gz, debian.tar.gz...\n\nAssociated artifacts: Exactly one '.dsc' file.",
                "summary": "Inspect a source package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_source_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.SourcePackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/deb/source_release_components/": {
            "get": {
                "operationId": "content_deb_source_release_components_list",
                "description": "A SourcePackageReleaseComponent associates a SourcePackage with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information on which source packages are part of which components.",
                "summary": "List source package release components",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "release_component",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where release_component matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "source_package",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where source_package matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.SourcePackageReleaseComponentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_deb_source_release_components_create",
                "description": "A SourcePackageReleaseComponent associates a SourcePackage with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information on which source packages are part of which components.",
                "summary": "Create a source package release component",
                "tags": [
                    "Content: Source_Release_Components"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackageReleaseComponent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackageReleaseComponent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.SourcePackageReleaseComponent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.SourcePackageReleaseComponentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_source_package_release_component_href}": {
            "get": {
                "operationId": "content_deb_source_release_components_read",
                "description": "A SourcePackageReleaseComponent associates a SourcePackage with a ReleaseComponent.\n\nAssociated artifacts: None; contains only metadata.\n\nThis simply stores the information on which source packages are part of which components.",
                "summary": "Inspect a source package release component",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_source_package_release_component_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Source_Release_Components"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.SourcePackageReleaseComponentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/file/files/": {
            "get": {
                "operationId": "content_file_files_list",
                "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "summary": "List file contents",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_file_files_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a file content",
                "tags": [
                    "Content: Files"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_content_href}": {
            "get": {
                "operationId": "content_file_files_read",
                "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "summary": "Inspect a file content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_content_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileContentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/advisories/": {
            "get": {
                "operationId": "content_rpm_advisories_list",
                "description": "A ViewSet for UpdateRecord.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.",
                "summary": "List update records",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where id matches value"
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-digest",
                                    "-fromstr",
                                    "-id",
                                    "-issued_date",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-pushcount",
                                    "-reboot_suggested",
                                    "-release",
                                    "-rights",
                                    "-severity",
                                    "-solution",
                                    "-status",
                                    "-summary",
                                    "-timestamp_of_interest",
                                    "-title",
                                    "-type",
                                    "-updated_date",
                                    "-upstream_id",
                                    "-version",
                                    "description",
                                    "digest",
                                    "fromstr",
                                    "id",
                                    "issued_date",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "pushcount",
                                    "reboot_suggested",
                                    "release",
                                    "rights",
                                    "severity",
                                    "solution",
                                    "status",
                                    "summary",
                                    "timestamp_of_interest",
                                    "title",
                                    "type",
                                    "updated_date",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `id` - Id\n* `-id` - Id (descending)\n* `updated_date` - Updated date\n* `-updated_date` - Updated date (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `issued_date` - Issued date\n* `-issued_date` - Issued date (descending)\n* `fromstr` - Fromstr\n* `-fromstr` - Fromstr (descending)\n* `status` - Status\n* `-status` - Status (descending)\n* `title` - Title\n* `-title` - Title (descending)\n* `summary` - Summary\n* `-summary` - Summary (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `type` - Type\n* `-type` - Type (descending)\n* `severity` - Severity\n* `-severity` - Severity (descending)\n* `solution` - Solution\n* `-solution` - Solution (descending)\n* `release` - Release\n* `-release` - Release (descending)\n* `rights` - Rights\n* `-rights` - Rights (descending)\n* `reboot_suggested` - Reboot suggested\n* `-reboot_suggested` - Reboot suggested (descending)\n* `pushcount` - Pushcount\n* `-pushcount` - Pushcount (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where severity matches value"
                    },
                    {
                        "in": "query",
                        "name": "severity__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where severity is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "severity__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where severity not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where status matches value"
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where status is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where status not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where type matches value"
                    },
                    {
                        "in": "query",
                        "name": "type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where type is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "type__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where type not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Advisories"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.UpdateRecordResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_advisories_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an update record",
                "tags": [
                    "Content: Advisories"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UpdateRecord"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UpdateRecord"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_update_record_href}": {
            "get": {
                "operationId": "content_rpm_advisories_read",
                "description": "A ViewSet for UpdateRecord.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.",
                "summary": "Inspect an update record",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_update_record_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Advisories"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UpdateRecordResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/distribution_trees/": {
            "get": {
                "operationId": "content_rpm_distribution_trees_list",
                "description": "Distribution Tree Viewset.",
                "summary": "List distribution trees",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Distribution_Trees"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.DistributionTreeResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_distribution_tree_href}": {
            "get": {
                "operationId": "content_rpm_distribution_trees_read",
                "description": "Distribution Tree Viewset.",
                "summary": "Inspect a distribution tree",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_distribution_tree_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Distribution_Trees"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.DistributionTreeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemd_defaults/": {
            "get": {
                "operationId": "content_rpm_modulemd_defaults_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemd defaultss",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "module",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where module matches value"
                    },
                    {
                        "in": "query",
                        "name": "module__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where module is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-module",
                                    "-pk",
                                    "-profiles",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-snippet",
                                    "-stream",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "module",
                                    "pk",
                                    "profiles",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "snippet",
                                    "stream",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `module` - Module\n* `-module` - Module (descending)\n* `stream` - Stream\n* `-stream` - Stream (descending)\n* `profiles` - Profiles\n* `-profiles` - Profiles (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `snippet` - Snippet\n* `-snippet` - Snippet (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stream",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where stream matches value"
                    },
                    {
                        "in": "query",
                        "name": "stream__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where stream is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdDefaultsResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemd_defaults_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd defaults",
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_defaults_href}": {
            "get": {
                "operationId": "content_rpm_modulemd_defaults_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd defaults",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_defaults_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdDefaultsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemd_obsoletes/": {
            "get": {
                "operationId": "content_rpm_modulemd_obsoletes_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemd obsoletes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdObsoleteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemd_obsoletes_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd obsolete",
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_obsolete_href}": {
            "get": {
                "operationId": "content_rpm_modulemd_obsoletes_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd obsolete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_obsolete_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdObsoleteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemds/": {
            "get": {
                "operationId": "content_rpm_modulemds_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemds",
                "parameters": [
                    {
                        "in": "query",
                        "name": "arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "arch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where arch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "context",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where context matches value"
                    },
                    {
                        "in": "query",
                        "name": "context__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where context is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-arch",
                                    "-artifacts",
                                    "-context",
                                    "-dependencies",
                                    "-description",
                                    "-digest",
                                    "-name",
                                    "-pk",
                                    "-profiles",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-snippet",
                                    "-static_context",
                                    "-stream",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "arch",
                                    "artifacts",
                                    "context",
                                    "dependencies",
                                    "description",
                                    "digest",
                                    "name",
                                    "pk",
                                    "profiles",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "snippet",
                                    "static_context",
                                    "stream",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `stream` - Stream\n* `-stream` - Stream (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `context` - Context\n* `-context` - Context (descending)\n* `arch` - Arch\n* `-arch` - Arch (descending)\n* `static_context` - Static context\n* `-static_context` - Static context (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `artifacts` - Artifacts\n* `-artifacts` - Artifacts (descending)\n* `profiles` - Profiles\n* `-profiles` - Profiles (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `snippet` - Snippet\n* `-snippet` - Snippet (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stream",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where stream matches value"
                    },
                    {
                        "in": "query",
                        "name": "stream__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where stream is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "version__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where version is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemds"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemds_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd",
                "tags": [
                    "Content: Modulemds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_href}": {
            "get": {
                "operationId": "content_rpm_modulemds_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemds"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagecategories/": {
            "get": {
                "operationId": "content_rpm_packagecategories_list",
                "description": "PackageCategory ViewSet.",
                "summary": "List package categorys",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagecategories"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageCategoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_category_href}": {
            "get": {
                "operationId": "content_rpm_packagecategories_read",
                "description": "PackageCategory ViewSet.",
                "summary": "Inspect a package category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_category_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagecategories"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageCategoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packageenvironments/": {
            "get": {
                "operationId": "content_rpm_packageenvironments_list",
                "description": "PackageEnvironment ViewSet.",
                "summary": "List package environments",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packageenvironments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageEnvironmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_environment_href}": {
            "get": {
                "operationId": "content_rpm_packageenvironments_read",
                "description": "PackageEnvironment ViewSet.",
                "summary": "Inspect a package environment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_environment_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packageenvironments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageEnvironmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagegroups/": {
            "get": {
                "operationId": "content_rpm_packagegroups_list",
                "description": "PackageGroup ViewSet.",
                "summary": "List package groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagegroups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_group_href}": {
            "get": {
                "operationId": "content_rpm_packagegroups_read",
                "description": "PackageGroup ViewSet.",
                "summary": "Inspect a package group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagegroups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagelangpacks/": {
            "get": {
                "operationId": "content_rpm_packagelangpacks_list",
                "description": "PackageLangpacks ViewSet.",
                "summary": "List package langpackss",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagelangpacks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageLangpacksResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_langpacks_href}": {
            "get": {
                "operationId": "content_rpm_packagelangpacks_read",
                "description": "PackageLangpacks ViewSet.",
                "summary": "Inspect a package langpacks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_langpacks_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagelangpacks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageLangpacksResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packages/": {
            "get": {
                "operationId": "content_rpm_packages_list",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.",
                "summary": "List packages",
                "parameters": [
                    {
                        "in": "query",
                        "name": "arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "arch__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch contains value"
                    },
                    {
                        "in": "query",
                        "name": "arch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where arch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "arch__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "arch__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch starts with value"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "md5",
                                "sha1",
                                "sha1",
                                "sha224",
                                "sha256",
                                "sha384",
                                "sha512",
                                "unknown"
                            ]
                        },
                        "description": "Filter results where checksum_type matches value\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where checksum_type is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where checksum_type not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "epoch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where epoch matches value"
                    },
                    {
                        "in": "query",
                        "name": "epoch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where epoch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "epoch__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where epoch not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-arch",
                                    "-changelogs",
                                    "-checksum_type",
                                    "-conflicts",
                                    "-description",
                                    "-enhances",
                                    "-epoch",
                                    "-evr",
                                    "-files",
                                    "-is_modular",
                                    "-location_base",
                                    "-location_href",
                                    "-name",
                                    "-obsoletes",
                                    "-pk",
                                    "-pkgId",
                                    "-provides",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-recommends",
                                    "-release",
                                    "-requires",
                                    "-rpm_buildhost",
                                    "-rpm_group",
                                    "-rpm_header_end",
                                    "-rpm_header_start",
                                    "-rpm_license",
                                    "-rpm_packager",
                                    "-rpm_sourcerpm",
                                    "-rpm_vendor",
                                    "-size_archive",
                                    "-size_installed",
                                    "-size_package",
                                    "-suggests",
                                    "-summary",
                                    "-supplements",
                                    "-time_build",
                                    "-time_file",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-url",
                                    "-version",
                                    "arch",
                                    "changelogs",
                                    "checksum_type",
                                    "conflicts",
                                    "description",
                                    "enhances",
                                    "epoch",
                                    "evr",
                                    "files",
                                    "is_modular",
                                    "location_base",
                                    "location_href",
                                    "name",
                                    "obsoletes",
                                    "pk",
                                    "pkgId",
                                    "provides",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "recommends",
                                    "release",
                                    "requires",
                                    "rpm_buildhost",
                                    "rpm_group",
                                    "rpm_header_end",
                                    "rpm_header_start",
                                    "rpm_license",
                                    "rpm_packager",
                                    "rpm_sourcerpm",
                                    "rpm_vendor",
                                    "size_archive",
                                    "size_installed",
                                    "size_package",
                                    "suggests",
                                    "summary",
                                    "supplements",
                                    "time_build",
                                    "time_file",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "url",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `epoch` - Epoch\n* `-epoch` - Epoch (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `release` - Release\n* `-release` - Release (descending)\n* `arch` - Arch\n* `-arch` - Arch (descending)\n* `evr` - Evr\n* `-evr` - Evr (descending)\n* `pkgId` - Pkgid\n* `-pkgId` - Pkgid (descending)\n* `checksum_type` - Checksum type\n* `-checksum_type` - Checksum type (descending)\n* `summary` - Summary\n* `-summary` - Summary (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `changelogs` - Changelogs\n* `-changelogs` - Changelogs (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `requires` - Requires\n* `-requires` - Requires (descending)\n* `provides` - Provides\n* `-provides` - Provides (descending)\n* `conflicts` - Conflicts\n* `-conflicts` - Conflicts (descending)\n* `obsoletes` - Obsoletes\n* `-obsoletes` - Obsoletes (descending)\n* `suggests` - Suggests\n* `-suggests` - Suggests (descending)\n* `enhances` - Enhances\n* `-enhances` - Enhances (descending)\n* `recommends` - Recommends\n* `-recommends` - Recommends (descending)\n* `supplements` - Supplements\n* `-supplements` - Supplements (descending)\n* `location_base` - Location base\n* `-location_base` - Location base (descending)\n* `location_href` - Location href\n* `-location_href` - Location href (descending)\n* `rpm_buildhost` - Rpm buildhost\n* `-rpm_buildhost` - Rpm buildhost (descending)\n* `rpm_group` - Rpm group\n* `-rpm_group` - Rpm group (descending)\n* `rpm_license` - Rpm license\n* `-rpm_license` - Rpm license (descending)\n* `rpm_packager` - Rpm packager\n* `-rpm_packager` - Rpm packager (descending)\n* `rpm_sourcerpm` - Rpm sourcerpm\n* `-rpm_sourcerpm` - Rpm sourcerpm (descending)\n* `rpm_vendor` - Rpm vendor\n* `-rpm_vendor` - Rpm vendor (descending)\n* `rpm_header_start` - Rpm header start\n* `-rpm_header_start` - Rpm header start (descending)\n* `rpm_header_end` - Rpm header end\n* `-rpm_header_end` - Rpm header end (descending)\n* `size_archive` - Size archive\n* `-size_archive` - Size archive (descending)\n* `size_installed` - Size installed\n* `-size_installed` - Size installed (descending)\n* `size_package` - Size package\n* `-size_package` - Size package (descending)\n* `time_build` - Time build\n* `-time_build` - Time build (descending)\n* `time_file` - Time file\n* `-time_file` - Time file (descending)\n* `is_modular` - Is modular\n* `-is_modular` - Is modular (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pkgId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where pkgId matches value"
                    },
                    {
                        "in": "query",
                        "name": "pkgId__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where pkgId is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "release",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release matches value"
                    },
                    {
                        "in": "query",
                        "name": "release__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release contains value"
                    },
                    {
                        "in": "query",
                        "name": "release__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where release is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "release__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "release__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release starts with value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "version__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where version is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "version__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_packages_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a package",
                "tags": [
                    "Content: Packages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Package"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Package"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_href}": {
            "get": {
                "operationId": "content_rpm_packages_read",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.",
                "summary": "Inspect a package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/repo_metadata_files/": {
            "get": {
                "operationId": "content_rpm_repo_metadata_files_list",
                "description": "RepoMetadataFile Viewset.",
                "summary": "List repo metadata files",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Repo_Metadata_Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RepoMetadataFileResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_repo_metadata_file_href}": {
            "get": {
                "operationId": "content_rpm_repo_metadata_files_read",
                "description": "RepoMetadataFile Viewset.",
                "summary": "Inspect a repo metadata file",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_repo_metadata_file_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Repo_Metadata_Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RepoMetadataFileResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/": {
            "get": {
                "operationId": "contentguards_list",
                "description": "Endpoint to list all contentguards.",
                "summary": "List content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "certguard.rhsm",
                                "certguard.x509",
                                "core.composite",
                                "core.content_redirect",
                                "core.header",
                                "core.rbac"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "certguard.rhsm",
                                    "certguard.x509",
                                    "core.composite",
                                    "core.content_redirect",
                                    "core.header",
                                    "core.rbac"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/certguard/rhsm/": {
            "get": {
                "operationId": "contentguards_certguard_rhsm_list",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "List rhsm cert guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcertguard.RHSMCertGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_certguard_rhsm_create",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Create a rhsm cert guard",
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{certguard_r_h_s_m_cert_guard_href}": {
            "get": {
                "operationId": "contentguards_certguard_rhsm_read",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Inspect a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_certguard_rhsm_update",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Update a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_certguard_rhsm_partial_update",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Update a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_certguard_rhsm_delete",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Delete a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/certguard/x509/": {
            "get": {
                "operationId": "contentguards_certguard_x509_list",
                "description": "X509CertGuard API Viewsets.",
                "summary": "List x509 cert guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcertguard.X509CertGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_certguard_x509_create",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Create a x509 cert guard",
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{certguard_x509_cert_guard_href}": {
            "get": {
                "operationId": "contentguards_certguard_x509_read",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Inspect a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_certguard_x509_update",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Update a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_certguard_x509_partial_update",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Update a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_certguard_x509_delete",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Delete a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/composite/": {
            "get": {
                "operationId": "contentguards_core_composite_list",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "List composite content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompositeContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_composite_create",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Create a composite content guard",
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_composite_read",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Inspect a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_composite_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_composite_partial_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_composite_delete",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Delete a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{composite_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_composite_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_composite_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_composite_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_composite_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/content_redirect/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "List content redirect content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentRedirectContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_content_redirect_create",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Create a content redirect content guard",
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_content_redirect_read",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Inspect a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_content_redirect_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_content_redirect_partial_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_content_redirect_delete",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Delete a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/header/": {
            "get": {
                "operationId": "contentguards_core_header_list",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "List header content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHeaderContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_header_create",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Create a header content guard",
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_header_read",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Inspect a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_header_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_header_partial_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_header_delete",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Delete a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{header_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_header_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_header_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_header_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_header_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/rbac/": {
            "get": {
                "operationId": "contentguards_core_rbac_list",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "List rbac content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRBACContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_rbac_create",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Create a rbac content guard",
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_rbac_read",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Inspect a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_rbac_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_rbac_partial_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_rbac_delete",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Delete a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_rbac_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_rbac_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/deb/copy/": {
            "post": {
                "operationId": "copy_content",
                "description": "Trigger an asynchronous task to copy APT contentfrom one repository into another, creating a newrepository version.",
                "summary": "Copy content",
                "tags": [
                    "Deb: Copy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/": {
            "get": {
                "operationId": "distributions_list",
                "description": "Provides base viewset for Distributions.",
                "summary": "List distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "container.container",
                                "container.pull-through",
                                "core.artifact",
                                "deb.apt-distribution",
                                "file.file",
                                "rpm.rpm"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.artifact` - core.artifact\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.apt-distribution` - deb.apt-distribution\n* `container.pull-through` - container.pull-through\n* `container.container` - container.container"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "container.container",
                                    "container.pull-through",
                                    "core.artifact",
                                    "deb.apt-distribution",
                                    "file.file",
                                    "rpm.rpm"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.artifact` - core.artifact\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.apt-distribution` - deb.apt-distribution\n* `container.pull-through` - container.pull-through\n* `container.container` - container.container",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/container/container/": {
            "get": {
                "operationId": "distributions_container_container_list",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "summary": "List container distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "namespace__name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-description",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-private",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "description",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "private",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `private` - Private\n* `-private` - Private (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_container_container_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a container distribution",
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}": {
            "get": {
                "operationId": "distributions_container_container_read",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "summary": "Inspect a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/container/pull-through/": {
            "get": {
                "operationId": "distributions_container_pull_through_list",
                "description": "A special pull-through Container Distribution that will reference distributions serving content.",
                "summary": "List container pull through distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPullThroughDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_container_pull_through_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a container pull through distribution",
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}": {
            "get": {
                "operationId": "distributions_container_pull_through_read",
                "description": "A special pull-through Container Distribution that will reference distributions serving content.",
                "summary": "Inspect a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_container_pull_through_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_container_pull_through_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_container_pull_through_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_container_pull_through_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_container_pull_through_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_container_pull_through_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_container_pull_through_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_container_pull_through_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_container_pull_through_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/core/artifacts/": {
            "get": {
                "operationId": "distributions_core_artifacts_list",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "List artifact distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_distribution_href}": {
            "get": {
                "operationId": "distributions_core_artifacts_read",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "Inspect an artifact distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/deb/apt/": {
            "get": {
                "operationId": "distributions_deb_apt_list",
                "description": "An AptDistribution is just an AptPublication made available via the content app.\n\nCreating an AptDistribution is a comparatively quick action. This way Pulp users may take as\nmuch time as is needed to prepare a VerbatimPublication or AptPublication, and then control the\nexact moment when that publication is made available.",
                "summary": "List apt distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.AptDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_deb_apt_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create an apt distribution",
                "tags": [
                    "Distributions: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_distribution_href}": {
            "get": {
                "operationId": "distributions_deb_apt_read",
                "description": "An AptDistribution is just an AptPublication made available via the content app.\n\nCreating an AptDistribution is a comparatively quick action. This way Pulp users may take as\nmuch time as is needed to prepare a VerbatimPublication or AptPublication, and then control the\nexact moment when that publication is made available.",
                "summary": "Inspect an apt distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_deb_apt_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an apt distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_deb_apt_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an apt distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_deb_apt_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an apt distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_deb_apt_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_deb_apt_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/file/file/": {
            "get": {
                "operationId": "distributions_file_file_list",
                "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.",
                "summary": "List file distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_file_file_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a file distribution",
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}": {
            "get": {
                "operationId": "distributions_file_file_read",
                "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.",
                "summary": "Inspect a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/rpm/rpm/": {
            "get": {
                "operationId": "distributions_rpm_rpm_list",
                "description": "ViewSet for RPM Distributions.",
                "summary": "List rpm distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_rpm_rpm_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a rpm distribution",
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}": {
            "get": {
                "operationId": "distributions_rpm_rpm_read",
                "description": "ViewSet for RPM Distributions.",
                "summary": "Inspect a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/docs/api.json": {
            "get": {
                "operationId": "docs_api.json_get",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Docs: Api.Json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/docs/api.yaml": {
            "get": {
                "operationId": "docs_api.yaml_get",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Docs: Api.Yaml"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/domains/": {
            "get": {
                "operationId": "domains_list",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "List domains",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-hide_guarded_distributions",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-redirect_to_object_storage",
                                    "-storage_class",
                                    "-storage_settings",
                                    "description",
                                    "hide_guarded_distributions",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "redirect_to_object_storage",
                                    "storage_class",
                                    "storage_settings"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `storage_class` - Storage class\n* `-storage_class` - Storage class (descending)\n* `storage_settings` - Storage settings\n* `-storage_settings` - Storage settings (descending)\n* `redirect_to_object_storage` - Redirect to object storage\n* `-redirect_to_object_storage` - Redirect to object storage (descending)\n* `hide_guarded_distributions` - Hide guarded distributions\n* `-hide_guarded_distributions` - Hide guarded distributions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDomainResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "domains_create",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Create a domain",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{domain_href}": {
            "get": {
                "operationId": "domains_read",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Inspect a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "domains_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "domains_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "domains_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/core/filesystem/": {
            "get": {
                "operationId": "exporters_core_filesystem_list",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "List filesystem exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-method",
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "method",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `method` - Method\n* `-method` - Method (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_create",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Create a filesystem exporter",
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_list",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "List filesystem exports",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_exports_create",
                "description": "Trigger an asynchronous task to export files to the filesystem",
                "summary": "Create a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_filesystem_export_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_read",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Inspect a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_exports_delete",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Delete a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{filesystem_exporter_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_read",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Inspect a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_filesystem_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_filesystem_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/core/pulp/": {
            "get": {
                "operationId": "exporters_core_pulp_list",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "List pulp exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_create",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Create a pulp exporter",
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_pulp_exports_list",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "List pulp exports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_exports_create",
                "description": "Trigger an asynchronous task to export a set of repositories",
                "summary": "Create a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_export_href}": {
            "get": {
                "operationId": "exporters_core_pulp_exports_read",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Inspect a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_exports_delete",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Delete a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_exporter_href}": {
            "get": {
                "operationId": "exporters_core_pulp_read",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Inspect a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_pulp_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_pulp_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "ViewSet for Group.",
                "summary": "List groups",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where id matches value"
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-id",
                                    "-name",
                                    "-pk",
                                    "id",
                                    "name",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_create",
                "description": "ViewSet for Group.",
                "summary": "Create a group",
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}roles/": {
            "get": {
                "operationId": "groups_roles_list",
                "description": "ViewSet for GroupRole.",
                "summary": "List group roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_roles_create",
                "description": "ViewSet for GroupRole.",
                "summary": "Create a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_group_role_href}": {
            "get": {
                "operationId": "groups_roles_read",
                "description": "ViewSet for GroupRole.",
                "summary": "Inspect a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_roles_delete",
                "description": "ViewSet for GroupRole.",
                "summary": "Delete a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}users/": {
            "get": {
                "operationId": "groups_users_list",
                "description": "List group users.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_users_create",
                "description": "Add a user to a group.",
                "summary": "Create an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupUserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_user_href}": {
            "delete": {
                "operationId": "groups_users_delete",
                "description": "Remove a user from a group.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}": {
            "get": {
                "operationId": "groups_read",
                "description": "ViewSet for Group.",
                "summary": "Inspect a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "groups_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "ViewSet for Group.",
                "summary": "Delete a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}add_role/": {
            "post": {
                "operationId": "groups_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}list_roles/": {
            "get": {
                "operationId": "groups_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}my_permissions/": {
            "get": {
                "operationId": "groups_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}remove_role/": {
            "post": {
                "operationId": "groups_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/importers/core/pulp/": {
            "get": {
                "operationId": "importers_core_pulp_list",
                "description": "ViewSet for PulpImporters.",
                "summary": "List pulp importers",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpImporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_create",
                "description": "ViewSet for PulpImporters.",
                "summary": "Create a pulp importer",
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_importer_href}imports/": {
            "get": {
                "operationId": "importers_core_pulp_imports_list",
                "description": "ViewSet for PulpImports.",
                "summary": "List pulp imports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedImportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_imports_create",
                "description": "Trigger an asynchronous task to import a Pulp export.",
                "summary": "Create a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_import_href}": {
            "get": {
                "operationId": "importers_core_pulp_imports_read",
                "description": "ViewSet for PulpImports.",
                "summary": "Inspect a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_imports_delete",
                "description": "ViewSet for PulpImports.",
                "summary": "Delete a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_importer_href}": {
            "get": {
                "operationId": "importers_core_pulp_read",
                "description": "ViewSet for PulpImporters.",
                "summary": "Inspect a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "importers_core_pulp_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "importers_core_pulp_partial_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_delete",
                "description": "ViewSet for PulpImporters.",
                "summary": "Delete a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/importers/core/pulp/import-check/": {
            "post": {
                "operationId": "pulp_import_check_post",
                "description": "Evaluates validity of proposed PulpImport parameters 'toc', 'path', and 'repo_mapping'.\n\n* Checks that toc, path are in ALLOWED_IMPORT_PATHS\n* if ALLOWED:\n  * Checks that toc, path exist and are readable\n  * If toc specified, checks that containing dir is writeable\n* Checks that repo_mapping is valid JSON",
                "summary": "Validate the parameters to be used for a PulpImport call",
                "tags": [
                    "Importers: Pulp Import-Check"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImportCheckResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/orphans/": {
            "delete": {
                "operationId": "orphans_delete",
                "description": "DEPRECATED! Trigger an asynchronous task that deletes all orphaned content and artifacts. Use the `POST /pulp/api/v3/orphans/cleanup/` call instead.",
                "summary": "Delete orphans",
                "tags": [
                    "Orphans"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/orphans/cleanup/": {
            "post": {
                "operationId": "orphans_cleanup_cleanup",
                "description": "Trigger an asynchronous orphan cleanup operation.",
                "tags": [
                    "Orphans: Cleanup"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/publications/": {
            "get": {
                "operationId": "publications_list",
                "description": "A base class for any publication viewset.",
                "summary": "List publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "deb.apt-publication",
                                "deb.verbatim-publication",
                                "file.file",
                                "rpm.rpm"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.verbatim-publication` - deb.verbatim-publication\n* `deb.apt-publication` - deb.apt-publication"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "deb.apt-publication",
                                    "deb.verbatim-publication",
                                    "file.file",
                                    "rpm.rpm"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.verbatim-publication` - deb.verbatim-publication\n* `deb.apt-publication` - deb.apt-publication",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/publications/deb/apt/": {
            "get": {
                "operationId": "publications_deb_apt_list",
                "description": "An AptPublication is the ready to serve Pulp-internal representation of an AptRepositoryVersion.\n\nWhen creating an APT publication, users must use simple or structured mode (or both). If the\npublication should include '.deb' packages that were manually uploaded to the relevant\nAptRepository, users must use 'simple=true'. Conversely, 'structured=true' is only useful for\npublishing content obtained via synchronization. Once a Pulp publication has been created, it\ncan be served by creating a Pulp distribution (in a near atomic action).",
                "summary": "List apt publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.AptPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_deb_apt_create",
                "description": "Trigger an asynchronous task to publish content",
                "summary": "Create an apt publication",
                "tags": [
                    "Publications: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptPublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptPublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptPublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_publication_href}": {
            "get": {
                "operationId": "publications_deb_apt_read",
                "description": "An AptPublication is the ready to serve Pulp-internal representation of an AptRepositoryVersion.\n\nWhen creating an APT publication, users must use simple or structured mode (or both). If the\npublication should include '.deb' packages that were manually uploaded to the relevant\nAptRepository, users must use 'simple=true'. Conversely, 'structured=true' is only useful for\npublishing content obtained via synchronization. Once a Pulp publication has been created, it\ncan be served by creating a Pulp distribution (in a near atomic action).",
                "summary": "Inspect an apt publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptPublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_deb_apt_delete",
                "description": "An AptPublication is the ready to serve Pulp-internal representation of an AptRepositoryVersion.\n\nWhen creating an APT publication, users must use simple or structured mode (or both). If the\npublication should include '.deb' packages that were manually uploaded to the relevant\nAptRepository, users must use 'simple=true'. Conversely, 'structured=true' is only useful for\npublishing content obtained via synchronization. Once a Pulp publication has been created, it\ncan be served by creating a Pulp distribution (in a near atomic action).",
                "summary": "Delete an apt publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/publications/deb/verbatim/": {
            "get": {
                "operationId": "publications_deb_verbatim_list",
                "description": "An VerbatimPublication is the Pulp-internal representation of a \"mirrored\" AptRepositoryVersion.\n\nIn other words, the verbatim publisher will recreate the synced subset of some a APT\nrepository using the exact same metadata files and signatures as used by the upstream original.\nOnce a Pulp publication has been created, it can be served by creating a Pulp distribution (in\na near atomic action).",
                "summary": "List verbatim publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Verbatim"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.VerbatimPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_deb_verbatim_create",
                "description": "Trigger an asynchronous task to publish content",
                "summary": "Create a verbatim publication",
                "tags": [
                    "Publications: Verbatim"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.VerbatimPublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.VerbatimPublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.VerbatimPublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_verbatim_publication_href}": {
            "get": {
                "operationId": "publications_deb_verbatim_read",
                "description": "An VerbatimPublication is the Pulp-internal representation of a \"mirrored\" AptRepositoryVersion.\n\nIn other words, the verbatim publisher will recreate the synced subset of some a APT\nrepository using the exact same metadata files and signatures as used by the upstream original.\nOnce a Pulp publication has been created, it can be served by creating a Pulp distribution (in\na near atomic action).",
                "summary": "Inspect a verbatim publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_verbatim_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Verbatim"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.VerbatimPublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_deb_verbatim_delete",
                "description": "An VerbatimPublication is the Pulp-internal representation of a \"mirrored\" AptRepositoryVersion.\n\nIn other words, the verbatim publisher will recreate the synced subset of some a APT\nrepository using the exact same metadata files and signatures as used by the upstream original.\nOnce a Pulp publication has been created, it can be served by creating a Pulp distribution (in\na near atomic action).",
                "summary": "Delete a verbatim publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_verbatim_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Verbatim"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/publications/file/file/": {
            "get": {
                "operationId": "publications_file_file_list",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "List file publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FilePublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_file_file_create",
                "description": "Trigger an asynchronous task to publish file content.",
                "summary": "Create a file publication",
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}": {
            "get": {
                "operationId": "publications_file_file_read",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "Inspect a file publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FilePublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_file_file_delete",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "Delete a file publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{file_file_publication_href}add_role/": {
            "post": {
                "operationId": "publications_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}list_roles/": {
            "get": {
                "operationId": "publications_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}my_permissions/": {
            "get": {
                "operationId": "publications_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}remove_role/": {
            "post": {
                "operationId": "publications_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/publications/rpm/rpm/": {
            "get": {
                "operationId": "publications_rpm_rpm_list",
                "description": "ViewSet for Rpm Publications.",
                "summary": "List rpm publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_rpm_rpm_create",
                "description": "Trigger an asynchronous task to create a new RPM content publication.",
                "summary": "Create a rpm publication",
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}": {
            "get": {
                "operationId": "publications_rpm_rpm_read",
                "description": "ViewSet for Rpm Publications.",
                "summary": "Inspect a rpm publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmPublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_rpm_rpm_delete",
                "description": "ViewSet for Rpm Publications.",
                "summary": "Delete a rpm publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}add_role/": {
            "post": {
                "operationId": "publications_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}list_roles/": {
            "get": {
                "operationId": "publications_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}my_permissions/": {
            "get": {
                "operationId": "publications_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}remove_role/": {
            "post": {
                "operationId": "publications_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/pulp_container/namespaces/": {
            "get": {
                "operationId": "pulp_container_namespaces_list",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "List container namespaces",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerNamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_container_namespaces_create",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "Create a container namespace",
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}": {
            "get": {
                "operationId": "pulp_container_namespaces_read",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "Inspect a container namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_container_namespaces_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}add_role/": {
            "post": {
                "operationId": "pulp_container_namespaces_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}list_roles/": {
            "get": {
                "operationId": "pulp_container_namespaces_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}my_permissions/": {
            "get": {
                "operationId": "pulp_container_namespaces_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}remove_role/": {
            "post": {
                "operationId": "pulp_container_namespaces_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/": {
            "get": {
                "operationId": "remotes_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "container.container",
                                "container.remote",
                                "deb.apt-remote",
                                "file.file",
                                "rpm.rpm",
                                "rpm.uln"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `rpm.uln` - rpm.uln\n* `deb.apt-remote` - deb.apt-remote\n* `container.container` - container.container\n* `container.remote` - container.remote"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "container.container",
                                    "container.remote",
                                    "deb.apt-remote",
                                    "file.file",
                                    "rpm.rpm",
                                    "rpm.uln"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `rpm.uln` - rpm.uln\n* `deb.apt-remote` - deb.apt-remote\n* `container.container` - container.container\n* `container.remote` - container.remote",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/container/container/": {
            "get": {
                "operationId": "remotes_container_container_list",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "List container remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_container_container_create",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "Create a container remote",
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}": {
            "get": {
                "operationId": "remotes_container_container_read",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "Inspect a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/container/pull-through/": {
            "get": {
                "operationId": "remotes_container_pull_through_list",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "List container pull through remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPullThroughRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_container_pull_through_create",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "Create a container pull through remote",
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}": {
            "get": {
                "operationId": "remotes_container_pull_through_read",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "Inspect a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_container_pull_through_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_container_pull_through_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_container_pull_through_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_container_pull_through_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_container_pull_through_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_container_pull_through_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_container_pull_through_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_container_pull_through_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_container_pull_through_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/deb/apt/": {
            "get": {
                "operationId": "remotes_deb_apt_list",
                "description": "An AptRemote represents an external APT repository content source.\n\nIt contains the location of the upstream APT repository, as well as the user options that are\napplied when using the remote to synchronize the upstream repository to Pulp.",
                "summary": "List apt remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.AptRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_deb_apt_create",
                "description": "An AptRemote represents an external APT repository content source.\n\nIt contains the location of the upstream APT repository, as well as the user options that are\napplied when using the remote to synchronize the upstream repository to Pulp.",
                "summary": "Create an apt remote",
                "tags": [
                    "Remotes: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_remote_href}": {
            "get": {
                "operationId": "remotes_deb_apt_read",
                "description": "An AptRemote represents an external APT repository content source.\n\nIt contains the location of the upstream APT repository, as well as the user options that are\napplied when using the remote to synchronize the upstream repository to Pulp.",
                "summary": "Inspect an apt remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_deb_apt_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an apt remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_deb_apt_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an apt remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_deb_apt_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an apt remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_deb_apt_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_deb_apt_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/file/file/": {
            "get": {
                "operationId": "remotes_file_file_list",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "List file remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_file_file_create",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "Create a file remote",
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}": {
            "get": {
                "operationId": "remotes_file_file_read",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "Inspect a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/rpm/rpm/": {
            "get": {
                "operationId": "remotes_rpm_rpm_list",
                "description": "A ViewSet for RpmRemote.",
                "summary": "List rpm remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_rpm_rpm_create",
                "description": "A ViewSet for RpmRemote.",
                "summary": "Create a rpm remote",
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}": {
            "get": {
                "operationId": "remotes_rpm_rpm_read",
                "description": "A ViewSet for RpmRemote.",
                "summary": "Inspect a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/rpm/uln/": {
            "get": {
                "operationId": "remotes_rpm_uln_list",
                "description": "A ViewSet for UlnRemote.",
                "summary": "List uln remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.UlnRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_rpm_uln_create",
                "description": "A ViewSet for UlnRemote.",
                "summary": "Create an uln remote",
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}": {
            "get": {
                "operationId": "remotes_rpm_uln_read",
                "description": "A ViewSet for UlnRemote.",
                "summary": "Inspect an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_rpm_uln_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_rpm_uln_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_rpm_uln_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_rpm_uln_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_rpm_uln_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_rpm_uln_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_rpm_uln_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_rpm_uln_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_rpm_uln_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repair/": {
            "post": {
                "operationId": "repair_post",
                "description": "Trigger an asynchronous task that checks for missing or corrupted artifacts, and attempts to redownload them.",
                "summary": "Repair Artifact Storage",
                "tags": [
                    "Repair"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/": {
            "get": {
                "operationId": "repositories_list",
                "description": "Endpoint to list all repositories.",
                "summary": "List repositories",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "container.container",
                                "container.container-push",
                                "deb.deb",
                                "file.file",
                                "rpm.rpm"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.deb` - deb.deb\n* `container.container` - container.container\n* `container.container-push` - container.container-push"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "container.container",
                                    "container.container-push",
                                    "deb.deb",
                                    "file.file",
                                    "rpm.rpm"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file\n* `rpm.rpm` - rpm.rpm\n* `deb.deb` - deb.deb\n* `container.container` - container.container\n* `container.container-push` - container.container-push",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/container/container/": {
            "get": {
                "operationId": "repositories_container_container_list",
                "description": "ViewSet for container repo.",
                "summary": "List container repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_container_container_create",
                "description": "ViewSet for container repo.",
                "summary": "Create a container repository",
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/container/container-push/": {
            "get": {
                "operationId": "repositories_container_container_push_list",
                "description": "ViewSet for a container push repository.\n\nPOST and DELETE are disallowed because a push repository is tightly coupled with a\nContainerDistribution which handles it automatically.\nCreated - during push operation, removed - with ContainerDistribution removal.",
                "summary": "List container push repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPushRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}": {
            "get": {
                "operationId": "repositories_container_container_push_read",
                "description": "ViewSet for a container push repository.\n\nPOST and DELETE are disallowed because a push repository is tightly coupled with a\nContainerDistribution which handles it automatically.\nCreated - during push operation, removed - with ContainerDistribution removal.",
                "summary": "Inspect a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_container_container_push_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_container_container_push_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_container_container_push_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_container_container_push_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_container_container_push_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_image/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_image",
                "description": "Trigger an asynchronous task to remove a manifest and all its associated data by a digest",
                "summary": "Delete an image from a repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_signatures/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_signatures",
                "description": "Create a task which deletes signatures by the passed key_id.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveSignaturesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}sign/": {
            "post": {
                "operationId": "repositories_container_container_push_sign",
                "description": "Trigger an asynchronous task to sign content.",
                "summary": "Sign images in the repo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}tag/": {
            "post": {
                "operationId": "repositories_container_container_push_tag",
                "description": "Trigger an asynchronous task to tag an image in the repository",
                "summary": "Create a Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}untag/": {
            "post": {
                "operationId": "repositories_container_container_push_untag",
                "description": "Trigger an asynchronous task to untag an image in the repository",
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}versions/": {
            "get": {
                "operationId": "repositories_container_container_push_versions_list",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.\n\nRepository versions of a push repository are not allowed to be deleted. Versioning of such\nrepositories, as well as creation/removal, happens automatically without explicit user actions.\nUsers could make a repository not functional by accident if allowed to delete repository\nversions.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_version_href}": {
            "get": {
                "operationId": "repositories_container_container_push_versions_read",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.\n\nRepository versions of a push repository are not allowed to be deleted. Versioning of such\nrepositories, as well as creation/removal, happens automatically without explicit user actions.\nUsers could make a repository not functional by accident if allowed to delete repository\nversions.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_push_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_container_container_push_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}": {
            "get": {
                "operationId": "repositories_container_container_read",
                "description": "ViewSet for container repo.",
                "summary": "Inspect a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}add/": {
            "post": {
                "operationId": "repositories_container_container_add",
                "description": "Trigger an asynchronous task to recursively add container content.",
                "summary": "Add content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}build_image/": {
            "post": {
                "operationId": "repositories_container_container_build_image",
                "description": "Trigger an asynchronous task to build an OCI image from a Containerfile. A new repository version is created with the new image and tag. This API is in tech preview. Backwards compatibility when upgrading is not guaranteed.",
                "summary": "Build an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}copy_manifests/": {
            "post": {
                "operationId": "repositories_container_container_copy_manifests",
                "description": "Trigger an asynchronous task to copy manifests",
                "summary": "Copy manifests",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}copy_tags/": {
            "post": {
                "operationId": "repositories_container_container_copy_tags",
                "description": "Trigger an asynchronous task to copy tags",
                "summary": "Copy tags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}remove/": {
            "post": {
                "operationId": "repositories_container_container_remove",
                "description": "Trigger an async task to recursively remove container content.",
                "summary": "Remove content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}sign/": {
            "post": {
                "operationId": "repositories_container_container_sign",
                "description": "Trigger an asynchronous task to sign content.",
                "summary": "Sign images in the repo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}sync/": {
            "post": {
                "operationId": "repositories_container_container_sync",
                "description": "Trigger an asynchronous task to sync content.",
                "summary": "Sync from a remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}tag/": {
            "post": {
                "operationId": "repositories_container_container_tag",
                "description": "Trigger an asynchronous task to tag an image in the repository",
                "summary": "Create a Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}untag/": {
            "post": {
                "operationId": "repositories_container_container_untag",
                "description": "Trigger an asynchronous task to untag an image in the repository",
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}versions/": {
            "get": {
                "operationId": "repositories_container_container_versions_list",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_version_href}": {
            "get": {
                "operationId": "repositories_container_container_versions_read",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_container_container_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/deb/apt/": {
            "get": {
                "operationId": "repositories_deb_apt_list",
                "description": "An AptRepository is the locally stored, Pulp-internal representation of a APT repository.\n\nIt may be filled with content via synchronization or content upload to create an\nAptRepositoryVersion.",
                "summary": "List apt repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginateddeb.AptRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_deb_apt_create",
                "description": "An AptRepository is the locally stored, Pulp-internal representation of a APT repository.\n\nIt may be filled with content via synchronization or content upload to create an\nAptRepositoryVersion.",
                "summary": "Create an apt repository",
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}": {
            "get": {
                "operationId": "repositories_deb_apt_read",
                "description": "An AptRepository is the locally stored, Pulp-internal representation of a APT repository.\n\nIt may be filled with content via synchronization or content upload to create an\nAptRepositoryVersion.",
                "summary": "Inspect an apt repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deb.AptRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_deb_apt_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an apt repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/deb.AptRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_deb_apt_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an apt repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patcheddeb.AptRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_deb_apt_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an apt repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}modify/": {
            "post": {
                "operationId": "repositories_deb_apt_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_deb_apt_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}sync/": {
            "post": {
                "operationId": "repositories_deb_apt_sync",
                "description": "Trigger an asynchronous task to sync content",
                "summary": "Sync from remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AptRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AptRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AptRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_deb_apt_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_href}versions/": {
            "get": {
                "operationId": "repositories_deb_apt_versions_list",
                "description": "An AptRepositoryVersion represents a single APT repository version as stored by Pulp.\n\nIt may be used as the basis for the creation of Pulp distributions in order to actually serve\nthe content contained within the repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "deb_apt_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Apt Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_version_href}": {
            "get": {
                "operationId": "repositories_deb_apt_versions_read",
                "description": "An AptRepositoryVersion represents a single APT repository version as stored by Pulp.\n\nIt may be used as the basis for the creation of Pulp distributions in order to actually serve\nthe content contained within the repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Apt Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_deb_apt_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{deb_apt_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_deb_apt_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deb_apt_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Apt Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/file/file/": {
            "get": {
                "operationId": "repositories_file_file_list",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "List file repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_file_file_create",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "Create a file repository",
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}": {
            "get": {
                "operationId": "repositories_file_file_read",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "Inspect a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}modify/": {
            "post": {
                "operationId": "repositories_file_file_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}sync/": {
            "post": {
                "operationId": "repositories_file_file_sync",
                "description": "Trigger an asynchronous task to sync file content.",
                "summary": "Sync from a remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}versions/": {
            "get": {
                "operationId": "repositories_file_file_versions_list",
                "description": "\nFileRepositoryVersion represents a single file repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_version_href}": {
            "get": {
                "operationId": "repositories_file_file_versions_read",
                "description": "\nFileRepositoryVersion represents a single file repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_file_file_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_file_file_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/reclaim_space/": {
            "post": {
                "operationId": "repositories_reclaim_space_reclaim",
                "description": "Trigger an asynchronous space reclaim operation.",
                "tags": [
                    "Repositories: Reclaim_Space"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/rpm/rpm/": {
            "get": {
                "operationId": "repositories_rpm_rpm_list",
                "description": "A ViewSet for RpmRepository.",
                "summary": "List rpm repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_rpm_rpm_create",
                "description": "A ViewSet for RpmRepository.",
                "summary": "Create a rpm repository",
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}": {
            "get": {
                "operationId": "repositories_rpm_rpm_read",
                "description": "A ViewSet for RpmRepository.",
                "summary": "Inspect a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}modify/": {
            "post": {
                "operationId": "repositories_rpm_rpm_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}sync/": {
            "post": {
                "operationId": "repositories_rpm_rpm_sync",
                "description": "Trigger an asynchronous task to sync RPM content.",
                "summary": "Sync from remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}versions/": {
            "get": {
                "operationId": "repositories_rpm_rpm_versions_list",
                "description": "RpmRepositoryVersion represents a single rpm repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_version_href}": {
            "get": {
                "operationId": "repositories_rpm_rpm_versions_read",
                "description": "RpmRepositoryVersion represents a single rpm repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_rpm_rpm_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_rpm_rpm_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repository_versions/": {
            "get": {
                "operationId": "repository_versions_list",
                "description": "A mixin to hold the shared get_queryset logic used by RepositoryVersionViewSets.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repository_Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/roles/": {
            "get": {
                "operationId": "roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contains_permission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter roles that have any of the permissions in the list.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "description__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "for_object_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter roles that only have permissions for the specified object HREF."
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "locked",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where locked matches value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-locked",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "description",
                                    "locked",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `locked` - Locked\n* `-locked` - Locked (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{role_href}": {
            "get": {
                "operationId": "roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "roles_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "roles_partial_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "roles_delete",
                "description": "ViewSet for Role.",
                "summary": "Delete a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/rpm/comps/": {
            "post": {
                "operationId": "rpm_comps_upload",
                "description": "Trigger an asynchronous task to upload a comps.xml file.",
                "summary": "Upload comps.xml",
                "tags": [
                    "Rpm: Comps"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompsXml"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompsXml"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/rpm/copy/": {
            "post": {
                "operationId": "copy_content",
                "description": "Trigger an asynchronous task to copy RPM contentfrom one repository into another, creating a newrepository version.",
                "summary": "Copy content",
                "tags": [
                    "Rpm: Copy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/signing-services/": {
            "get": {
                "operationId": "signing_services_list",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "List signing services",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pubkey_fingerprint",
                                    "-public_key",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-script",
                                    "name",
                                    "pk",
                                    "pubkey_fingerprint",
                                    "public_key",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "script"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `public_key` - Public key\n* `-public_key` - Public key (descending)\n* `pubkey_fingerprint` - Pubkey fingerprint\n* `-pubkey_fingerprint` - Pubkey fingerprint (descending)\n* `script` - Script\n* `-script` - Script (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSigningServiceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{signing_service_href}": {
            "get": {
                "operationId": "signing_services_read",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "Inspect a signing service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "signing_service_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningServiceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/status/": {
            "get": {
                "operationId": "status_read",
                "description": "Returns status and app information about Pulp.\n\nInformation includes:\n * version of pulpcore and loaded pulp plugins\n * known workers\n * known content apps\n * database connection status\n * redis connection status\n * disk usage information",
                "summary": "Inspect status of Pulp",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/task-groups/": {
            "get": {
                "operationId": "task_groups_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List task groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_group_href}": {
            "get": {
                "operationId": "task_groups_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a task group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/task-schedules/": {
            "get": {
                "operationId": "task_schedules_list",
                "description": "ViewSet to monitor task schedules.",
                "summary": "List task schedules",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-dispatch_interval",
                                    "-name",
                                    "-next_dispatch",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-task_name",
                                    "dispatch_interval",
                                    "name",
                                    "next_dispatch",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "task_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `next_dispatch` - Next dispatch\n* `-next_dispatch` - Next dispatch (descending)\n* `dispatch_interval` - Dispatch interval\n* `-dispatch_interval` - Dispatch interval (descending)\n* `task_name` - Task name\n* `-task_name` - Task name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "task_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "task_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskScheduleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}": {
            "get": {
                "operationId": "task_schedules_read",
                "description": "ViewSet to monitor task schedules.",
                "summary": "Inspect a task schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskScheduleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}add_role/": {
            "post": {
                "operationId": "task_schedules_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}list_roles/": {
            "get": {
                "operationId": "task_schedules_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}my_permissions/": {
            "get": {
                "operationId": "task_schedules_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}remove_role/": {
            "post": {
                "operationId": "task_schedules_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/tasks/": {
            "get": {
                "operationId": "tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "child_tasks",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where child_tasks matches value"
                    },
                    {
                        "in": "query",
                        "name": "created_resources",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "finished_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where finished_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "logging_cid",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid matches value"
                    },
                    {
                        "in": "query",
                        "name": "logging_cid__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid contains value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-enc_args",
                                    "-enc_kwargs",
                                    "-error",
                                    "-finished_at",
                                    "-logging_cid",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-reserved_resources_record",
                                    "-started_at",
                                    "-state",
                                    "-unblocked_at",
                                    "-versions",
                                    "enc_args",
                                    "enc_kwargs",
                                    "error",
                                    "finished_at",
                                    "logging_cid",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "reserved_resources_record",
                                    "started_at",
                                    "state",
                                    "unblocked_at",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `state` - State\n* `-state` - State (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `logging_cid` - Logging cid\n* `-logging_cid` - Logging cid (descending)\n* `unblocked_at` - Unblocked at\n* `-unblocked_at` - Unblocked at (descending)\n* `started_at` - Started at\n* `-started_at` - Started at (descending)\n* `finished_at` - Finished at\n* `-finished_at` - Finished at (descending)\n* `error` - Error\n* `-error` - Error (descending)\n* `enc_args` - Enc args\n* `-enc_args` - Enc args (descending)\n* `enc_kwargs` - Enc kwargs\n* `-enc_kwargs` - Enc kwargs (descending)\n* `reserved_resources_record` - Reserved resources record\n* `-reserved_resources_record` - Reserved resources record (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_task",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where parent_task matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources_record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where started_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "canceling",
                                "completed",
                                "failed",
                                "running",
                                "skipped",
                                "waiting"
                            ]
                        },
                        "description": "Filter results where state matches value\n\n* `waiting` - Waiting\n* `skipped` - Skipped\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `canceled` - Canceled\n* `canceling` - Canceling"
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where state is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where state not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "task_group",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where task_group matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where worker matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where worker is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where worker has a null value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}": {
            "get": {
                "operationId": "tasks_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tasks_cancel",
                "description": "This operation cancels a task.",
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tasks_delete",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Delete a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{task_href}add_role/": {
            "post": {
                "operationId": "tasks_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}list_roles/": {
            "get": {
                "operationId": "tasks_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}my_permissions/": {
            "get": {
                "operationId": "tasks_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}remove_role/": {
            "post": {
                "operationId": "tasks_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/tasks/purge/": {
            "post": {
                "operationId": "tasks_purge",
                "description": "Trigger an asynchronous task that deletes completed tasks that finished prior to a specified timestamp.",
                "summary": "Purge Completed Tasks",
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/uploads/": {
            "get": {
                "operationId": "uploads_list",
                "description": "View for chunked uploads.",
                "summary": "List uploads",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-size",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "size"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size matches value"
                    },
                    {
                        "in": "query",
                        "name": "size__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "size__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is less than value"
                    },
                    {
                        "in": "query",
                        "name": "size__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where size is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUploadResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "uploads_create",
                "description": "View for chunked uploads.",
                "summary": "Create an upload",
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}": {
            "get": {
                "operationId": "uploads_read",
                "description": "View for chunked uploads.",
                "summary": "Inspect an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "uploads_update",
                "description": "Upload a chunk for an upload.",
                "summary": "Upload a file chunk",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Content-Range",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Content-Range header specifies the location of the file chunk within the file.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "uploads_delete",
                "description": "View for chunked uploads.",
                "summary": "Delete an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upload_href}add_role/": {
            "post": {
                "operationId": "uploads_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}commit/": {
            "post": {
                "operationId": "uploads_commit",
                "description": "Queues a Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.",
                "summary": "Finish an Upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}list_roles/": {
            "get": {
                "operationId": "uploads_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}my_permissions/": {
            "get": {
                "operationId": "uploads_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}remove_role/": {
            "post": {
                "operationId": "uploads_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/upstream-pulps/": {
            "get": {
                "operationId": "upstream_pulps_list",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "List upstream pulps",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUpstreamPulpResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "upstream_pulps_create",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Create an upstream pulp",
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}": {
            "get": {
                "operationId": "upstream_pulps_read",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Inspect an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "upstream_pulps_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "upstream_pulps_partial_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "upstream_pulps_delete",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Delete an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upstream_pulp_href}add_role/": {
            "post": {
                "operationId": "upstream_pulps_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}list_roles/": {
            "get": {
                "operationId": "upstream_pulps_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}my_permissions/": {
            "get": {
                "operationId": "upstream_pulps_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}remove_role/": {
            "post": {
                "operationId": "upstream_pulps_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}replicate/": {
            "post": {
                "operationId": "upstream_pulps_replicate",
                "description": "Trigger an asynchronous repository replication task group. This API is provided as a tech preview.",
                "summary": "Replicate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/users/": {
            "get": {
                "operationId": "users_list",
                "description": "ViewSet for User.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where email is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where first_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_active matches value"
                    },
                    {
                        "in": "query",
                        "name": "is_staff",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_staff matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where last_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-date_joined",
                                    "-email",
                                    "-first_name",
                                    "-id",
                                    "-is_active",
                                    "-is_staff",
                                    "-is_superuser",
                                    "-last_login",
                                    "-last_name",
                                    "-password",
                                    "-pk",
                                    "-username",
                                    "date_joined",
                                    "email",
                                    "first_name",
                                    "id",
                                    "is_active",
                                    "is_staff",
                                    "is_superuser",
                                    "last_login",
                                    "last_name",
                                    "password",
                                    "pk",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `last_login` - Last login\n* `-last_login` - Last login (descending)\n* `is_superuser` - Is superuser\n* `-is_superuser` - Is superuser (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `first_name` - First name\n* `-first_name` - First name (descending)\n* `last_name` - Last name\n* `-last_name` - Last name (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `is_staff` - Is staff\n* `-is_staff` - Is staff (descending)\n* `is_active` - Is active\n* `-is_active` - Is active (descending)\n* `date_joined` - Date joined\n* `-date_joined` - Date joined (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where username is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "description": "ViewSet for User.",
                "summary": "Create an user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{auth_user_href}": {
            "get": {
                "operationId": "users_read",
                "description": "ViewSet for User.",
                "summary": "Inspect an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_delete",
                "description": "ViewSet for User.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{auth_user_href}roles/": {
            "get": {
                "operationId": "users_roles_list",
                "description": "ViewSet for UserRole.",
                "summary": "List user roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_roles_create",
                "description": "ViewSet for UserRole.",
                "summary": "Create an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{auth_users_user_role_href}": {
            "get": {
                "operationId": "users_roles_read",
                "description": "ViewSet for UserRole.",
                "summary": "Inspect an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_roles_delete",
                "description": "ViewSet for UserRole.",
                "summary": "Delete an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/workers/": {
            "get": {
                "operationId": "workers_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List workers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "last_heartbeat",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where last_heartbeat is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "missing",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "online",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_heartbeat",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-versions",
                                    "last_heartbeat",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_heartbeat` - Last heartbeat\n* `-last_heartbeat` - Last heartbeat (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkerResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{worker_href}": {
            "get": {
                "operationId": "workers_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a worker",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worker_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/token/": {
            "get": {
                "operationId": "token_get",
                "description": "Handles GET requests for the /token/ endpoint.",
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "AccessPolicyResponse": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "viewset_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of ViewSet this AccessPolicy authorizes."
                    },
                    "customized": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the AccessPolicy has been user-modified. False otherwise."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "AddonResponse": {
                "type": "object",
                "description": "Addon serializer.",
                "properties": {
                    "addon_id": {
                        "type": "string",
                        "description": "Addon id."
                    },
                    "uid": {
                        "type": "string",
                        "description": "Addon uid."
                    },
                    "name": {
                        "type": "string",
                        "description": "Addon name."
                    },
                    "type": {
                        "type": "string",
                        "description": "Addon type."
                    },
                    "packages": {
                        "type": "string",
                        "description": "Relative path to directory with binary RPMs."
                    }
                },
                "required": [
                    "addon_id",
                    "name",
                    "packages",
                    "type",
                    "uid"
                ]
            },
            "ApiAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "AptRepositorySyncURL": {
                "type": "object",
                "description": "A Serializer for AptRepository Sync.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    },
                    "optimize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Using optimize sync, will skip the processing of metadata if the checksum has not changed since the last sync. This greately improves re-sync performance in such situations. If you feel the sync is missing something that has changed about the remote repository you are syncing, try using optimize=False for a full re-sync. Consider opening an issue on why we should not optimize in your use case."
                    }
                }
            },
            "Artifact": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ArtifactDistributionResponse": {
                "type": "object",
                "description": "A serializer for ArtifactDistribution.",
                "properties": {
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ArtifactResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "file": {
                        "type": "string",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ChecksumResponse": {
                "type": "object",
                "description": "Checksum serializer.",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "File path."
                    },
                    "checksum": {
                        "type": "string",
                        "description": "Checksum for the file."
                    }
                },
                "required": [
                    "checksum",
                    "path"
                ]
            },
            "CompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompositeContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompressionTypeEnum": {
                "enum": [
                    "zstd",
                    "gz"
                ],
                "type": "string",
                "description": "* `zstd` - zstd\n* `gz` - gz"
            },
            "CompsXml": {
                "type": "object",
                "description": "A serializer for comps.xml Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Full path of a comps.xml file that may be parsed into comps.xml Content units."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "URI of an RPM repository the comps.xml content units should be associated to."
                    },
                    "replace": {
                        "type": "boolean",
                        "writeOnly": true,
                        "description": "If true, incoming comps.xml replaces existing comps-related ContentUnits in the specified repository."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ContainerRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for Container Sync.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    },
                    "signed_only": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, only signed content will be synced. Signatures are not verified."
                    }
                }
            },
            "ContentAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "ContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuardResponse": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentSettingsResponse": {
                "type": "object",
                "description": "Serializer for information about content-app-settings for the pulp instance",
                "properties": {
                    "content_origin": {
                        "type": "string",
                        "description": "The CONTENT_ORIGIN setting for this Pulp instance"
                    },
                    "content_path_prefix": {
                        "type": "string",
                        "description": "The CONTENT_PATH_PREFIX setting for this Pulp instance"
                    }
                },
                "required": [
                    "content_origin",
                    "content_path_prefix"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "removed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "present": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "Copy": {
                "type": "object",
                "description": "A serializer for Content Copy API.",
                "properties": {
                    "config": {
                        "type": "object",
                        "description": "A JSON document describing sources, destinations, and content to be copied"
                    },
                    "structured": {
                        "type": "boolean",
                        "default": true,
                        "description": "Also copy any distributions, components, and releases as needed for any packages being copied. This will allow for structured publications of the target repository.Default is set to True"
                    },
                    "dependency_solving": {
                        "type": "boolean",
                        "default": false,
                        "description": "Also copy dependencies of any packages being copied. NOT YETIMPLEMENTED! You must keep this at \"False\"!"
                    }
                },
                "required": [
                    "config"
                ]
            },
            "DatabaseConnectionResponse": {
                "type": "object",
                "description": "Serializer for the database connection information",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to the database"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "DistributionResponse": {
                "type": "object",
                "description": "The Serializer for the Distribution model.\n\nThe serializer deliberately omits the `publication` and `repository_version` field due to\nplugins typically requiring one or the other but not both.\n\nTo include the ``publication`` field, it is recommended plugins define the field::\n\n  publication = DetailRelatedField(\n      required=False,\n      help_text=_(\"Publication to be served\"),\n      view_name_pattern=r\"publications(-.*/.*)?-detail\",\n      queryset=models.Publication.objects.exclude(complete=False),\n      allow_null=True,\n  )\n\nTo include the ``repository_version`` field, it is recommended plugins define the field::\n\n  repository_version = RepositoryVersionRelatedField(\n      required=False, help_text=_(\"RepositoryVersion to be served\"), allow_null=True\n  )\n\nAdditionally, the serializer omits the ``remote`` field, which is used for pull-through caching\nfeature and only by plugins which use publications. Plugins implementing a pull-through caching\nshould define the field in their derived serializer class like this::\n\n  remote = DetailRelatedField(\n      required=False,\n      help_text=_('Remote that can be used to fetch content when using pull-through caching.'),\n      queryset=models.Remote.objects.all(),\n      allow_null=True\n  )",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "Domain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "DomainResponse": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "EvaluationResponse": {
                "type": "object",
                "description": "Results from evaluating a proposed parameter to a PulpImport call.",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Parameter value being evaluated."
                    },
                    "is_valid": {
                        "type": "boolean",
                        "description": "True if evaluation passed, false otherwise."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Messages describing results of all evaluations done. May be an empty list."
                    }
                },
                "required": [
                    "context",
                    "is_valid",
                    "messages"
                ]
            },
            "FilesystemExport": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the publication to be exported."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the repository version export."
                    },
                    "start_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "The URI of the last-exported-repo-version."
                    }
                }
            },
            "FilesystemExportResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    }
                }
            },
            "FilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "FilesystemExporterResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "Group": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the group progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of group progress report'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the group progress report."
                    }
                }
            },
            "GroupResponse": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupRole": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupRoleResponse": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupUser": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "GroupUserResponse": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "HeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "HeaderContentGuardResponse": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "ImageResponse": {
                "type": "object",
                "description": "Image serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "File name."
                    },
                    "path": {
                        "type": "string",
                        "description": "File path."
                    },
                    "platforms": {
                        "type": "string",
                        "description": "Compatible platforms."
                    },
                    "artifact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactResponse"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "path",
                    "platforms"
                ]
            },
            "ImportResponse": {
                "type": "object",
                "description": "Serializer for Imports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the Task that ran the Import."
                    },
                    "params": {
                        "type": "object",
                        "description": "Any parameters that were used to create the import."
                    }
                },
                "required": [
                    "params",
                    "task"
                ]
            },
            "ManifestCopy": {
                "type": "object",
                "description": "Serializer for copying manifests from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "title": "Repository",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "digests": {
                        "type": "array",
                        "items": {},
                        "description": "A list of manifest digests to copy."
                    },
                    "media_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaTypesEnum"
                        },
                        "description": "A list of media_types to copy."
                    }
                }
            },
            "MediaTypesEnum": {
                "enum": [
                    "application/vnd.docker.distribution.manifest.v1+json",
                    "application/vnd.docker.distribution.manifest.v2+json",
                    "application/vnd.docker.distribution.manifest.list.v2+json",
                    "application/vnd.oci.image.manifest.v1+json",
                    "application/vnd.oci.image.index.v1+json"
                ],
                "type": "string",
                "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json"
            },
            "MethodEnum": {
                "enum": [
                    "write",
                    "hardlink",
                    "symlink"
                ],
                "type": "string",
                "description": "* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
            },
            "MinimalTaskResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'."
                    },
                    "unblocked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task was identified ready for pickup."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task stopped execution."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MultipleArtifactContentResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "MyPermissionsResponse": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "NestedRole": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "role"
                ]
            },
            "NestedRoleResponse": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "OCIBuildImage": {
                "type": "object",
                "description": "Serializer for building an OCI container image from a Containerfile.\n\nThe Containerfile can either be specified via an artifact url, or a new file can be uploaded.\nA repository must be specified, to which the container image content will be added.",
                "properties": {
                    "containerfile_artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact representing the Containerfile that should be used to run podman-build."
                    },
                    "containerfile": {
                        "type": "string",
                        "format": "binary",
                        "description": "An uploaded Containerfile that should be used to run podman-build."
                    },
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "default": "latest",
                        "description": "A tag name for the new image being built."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A JSON string where each key is an artifact href and the value is it's relative path (name) inside the /pulp_working_directory of the build container executing the Containerfile."
                    }
                }
            },
            "ObjectRolesResponse": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedRoleResponse"
                        }
                    }
                },
                "required": [
                    "roles"
                ]
            },
            "OrphansCleanup": {
                "type": "object",
                "properties": {
                    "content_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will delete specified content and associated Artifacts if they are orphans."
                    },
                    "orphan_protection_time": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "The time in minutes for how long Pulp will hold orphan Content and Artifacts before they become candidates for deletion by this orphan cleanup task. This should ideally be longer than your longest running task otherwise any content created during that task could be cleaned up before the task finishes. If not specified, a default value is taken from the setting ORPHAN_PROTECTION_TIME."
                    }
                }
            },
            "PackageChecksumTypeEnum": {
                "enum": [
                    "unknown",
                    "md5",
                    "sha1",
                    "sha224",
                    "sha256",
                    "sha384",
                    "sha512"
                ],
                "type": "string",
                "description": "* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
            },
            "PaginatedAccessPolicyResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccessPolicyResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactDistributionResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactResponse"
                        }
                    }
                }
            },
            "PaginatedCompositeContentGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompositeContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContentGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContentRedirectContentGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionResponse"
                        }
                    }
                }
            },
            "PaginatedDomainResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExportResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExportResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExporterResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExporterResponse"
                        }
                    }
                }
            },
            "PaginatedGroupResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        }
                    }
                }
            },
            "PaginatedGroupRoleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGroupUserResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        }
                    }
                }
            },
            "PaginatedHeaderContentGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HeaderContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedImportResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportResponse"
                        }
                    }
                }
            },
            "PaginatedMultipleArtifactContentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipleArtifactContentResponse"
                        }
                    }
                }
            },
            "PaginatedPublicationResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicationResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExportResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExportResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExporterResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExporterResponse"
                        }
                    }
                }
            },
            "PaginatedPulpImporterResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpImporterResponse"
                        }
                    }
                }
            },
            "PaginatedRBACContentGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RBACContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "PaginatedRoleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResponse"
                        }
                    }
                }
            },
            "PaginatedSigningServiceResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SigningServiceResponse"
                        }
                    }
                }
            },
            "PaginatedTaskGroupResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskGroupResponse"
                        }
                    }
                }
            },
            "PaginatedTaskResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResponse"
                        }
                    }
                }
            },
            "PaginatedTaskScheduleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskScheduleResponse"
                        }
                    }
                }
            },
            "PaginatedUploadResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadResponse"
                        }
                    }
                }
            },
            "PaginatedUpstreamPulpResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpstreamPulpResponse"
                        }
                    }
                }
            },
            "PaginatedUserResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    }
                }
            },
            "PaginatedUserRoleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRoleResponse"
                        }
                    }
                }
            },
            "PaginatedWorkerResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        }
                    }
                }
            },
            "Paginatedcertguard.RHSMCertGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                        }
                    }
                }
            },
            "Paginatedcertguard.X509CertGuardResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.BlobResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.BlobResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerNamespaceResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPullThroughDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPullThroughDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPullThroughRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPushRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ManifestResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ManifestResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ManifestSignatureResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ManifestSignatureResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.TagResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.TagResponse"
                        }
                    }
                }
            },
            "Paginateddeb.AptDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.AptDistributionResponse"
                        }
                    }
                }
            },
            "Paginateddeb.AptPublicationResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.AptPublicationResponse"
                        }
                    }
                }
            },
            "Paginateddeb.AptRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.AptRemoteResponse"
                        }
                    }
                }
            },
            "Paginateddeb.AptRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.AptRepositoryResponse"
                        }
                    }
                }
            },
            "Paginateddeb.GenericContentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.GenericContentResponse"
                        }
                    }
                }
            },
            "Paginateddeb.InstallerFileIndexResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.InstallerFileIndexResponse"
                        }
                    }
                }
            },
            "Paginateddeb.InstallerPackageResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.InstallerPackageResponse"
                        }
                    }
                }
            },
            "Paginateddeb.PackageIndexResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.PackageIndexResponse"
                        }
                    }
                }
            },
            "Paginateddeb.PackageReleaseComponentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.PackageReleaseComponentResponse"
                        }
                    }
                }
            },
            "Paginateddeb.PackageResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.PackageResponse"
                        }
                    }
                }
            },
            "Paginateddeb.ReleaseArchitectureResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.ReleaseArchitectureResponse"
                        }
                    }
                }
            },
            "Paginateddeb.ReleaseComponentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.ReleaseComponentResponse"
                        }
                    }
                }
            },
            "Paginateddeb.ReleaseFileResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.ReleaseFileResponse"
                        }
                    }
                }
            },
            "Paginateddeb.ReleaseResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.ReleaseResponse"
                        }
                    }
                }
            },
            "Paginateddeb.SourceIndexResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.SourceIndexResponse"
                        }
                    }
                }
            },
            "Paginateddeb.SourcePackageReleaseComponentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.SourcePackageReleaseComponentResponse"
                        }
                    }
                }
            },
            "Paginateddeb.SourcePackageResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.SourcePackageResponse"
                        }
                    }
                }
            },
            "Paginateddeb.VerbatimPublicationResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deb.VerbatimPublicationResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileAlternateContentSourceResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileContentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileContentResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FilePublicationResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FilePublicationResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.DistributionTreeResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.DistributionTreeResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdDefaultsResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdDefaultsResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdObsoleteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdObsoleteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageCategoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageCategoryResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageEnvironmentResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageEnvironmentResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageGroupResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageGroupResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageLangpacksResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageLangpacksResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RepoMetadataFileResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RepoMetadataFileResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmAlternateContentSourceResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmPublicationResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmPublicationResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.UlnRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.UpdateRecordResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UpdateRecordResponse"
                        }
                    }
                }
            },
            "PatchedAccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                }
            },
            "PatchedCompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                }
            },
            "PatchedContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedDomain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                }
            },
            "PatchedFilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                }
            },
            "PatchedGroup": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name",
                        "maxLength": 150
                    }
                }
            },
            "PatchedHeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                }
            },
            "PatchedPulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                }
            },
            "PatchedPulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PatchedRBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedRole": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                }
            },
            "PatchedTaskCancel": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "state": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The desired state of the task. Only 'canceled' is accepted."
                    }
                }
            },
            "PatchedUpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                }
            },
            "PatchedUser": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Users password. Set to ``null`` to disable password authentication."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    }
                }
            },
            "Patchedcertguard.RHSMCertGuard": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                }
            },
            "Patchedcertguard.X509CertGuard": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                }
            },
            "Patchedcontainer.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerPullThroughDistribution": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerPullThroughRemote": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "Patchedcontainer.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        \n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "upstream_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the upstream repository"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    },
                    "sigstore": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A URL to a sigstore to download image signatures from",
                        "format": "uri"
                    }
                }
            },
            "Patchedcontainer.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                }
            },
            "Patcheddeb.AptDistribution": {
                "type": "object",
                "description": "Serializer for AptDistributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                }
            },
            "Patcheddeb.AptRemote": {
                "type": "object",
                "description": "A Serializer for AptRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "distributions": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Whitespace separated list of distributions to sync.\nThe distribution is the path from the repository root to the \"Release\" file you want to access. This is often, but not always, equal to either the codename or the suite of the release you want to sync. If the repository you are trying to sync uses \"flat repository format\", the distribution must end with a \"/\". Based on \"/etc/apt/sources.list\" syntax."
                    },
                    "components": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Whitespace separatet list of components to sync.\nIf none are supplied, all that are available will be synchronized. Leave blank for repositores using \"flat repository format\"."
                    },
                    "architectures": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Whitespace separated list of architectures to sync\nIf none are supplied, all that are available will be synchronized. A list of valid architecture specification strings can be found by running \"dpkg-architecture -L\". A sync will download the intersection of the list of architectures provided via this field and those provided by the relevant \"Release\" file. Architecture=\"all\" is always synchronized and does not need to be provided here."
                    },
                    "sync_sources": {
                        "type": "boolean",
                        "description": "Sync source packages"
                    },
                    "sync_udebs": {
                        "type": "boolean",
                        "description": "Sync installer packages"
                    },
                    "sync_installer": {
                        "type": "boolean",
                        "description": "Sync installer files"
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify origin releases against"
                    },
                    "ignore_missing_package_indices": {
                        "type": "boolean",
                        "description": "By default, upstream repositories that declare architectures and corresponding package indices in their Release files without actually publishing them, will fail to synchronize.\nSet this flag to True to allow the synchronization of such \"partial mirrors\" instead.\nAlternatively, you could make your remote filter by architectures for which the upstream repository does have indices."
                    }
                }
            },
            "Patcheddeb.AptRepository": {
                "type": "object",
                "description": "A Serializer for AptRepository.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "publish_upstream_release_fields": {
                        "type": "boolean",
                        "description": "Previously, pulp_deb only synced the Release file fields codename and suite, now version, origin, label, and description are also synced. Setting this setting to False will make Pulp revert to the old behaviour of using it's own internal values for the new fields during publish. This is primarily intended to avoid a sudden change in behaviour for existing Pulp repositories, since many Release file field changes need to be accepted by hosts consuming the published repository. The default for new repositories is True."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service. Used if AptPublication.signing_service is not set"
                    },
                    "signing_service_release_overrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "A dictionary of Release distributions and the Signing Service URLs they should use.Example: {\"bionic\": \"/pulp/api/v3/signing-services/433a1f70-c589-4413-a803-c50b842ea9b5/\"}"
                    }
                }
            },
            "Patchedfile.FileAlternateContentSource": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                }
            },
            "Patchedfile.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                }
            },
            "Patchedfile.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "Patchedfile.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "Patchedrpm.RpmAlternateContentSource": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                }
            },
            "Patchedrpm.RpmDistribution": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                }
            },
            "Patchedrpm.RpmRemote": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sles_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Authentication token for SLES repositories."
                    }
                }
            },
            "Patchedrpm.RpmRepository": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_config": {
                        "type": "object",
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "Patchedrpm.UlnRemote": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account username."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account password."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "uln_server_base_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                }
            },
            "Policy762Enum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string",
                "description": "* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
            },
            "Policy8e2Enum": {
                "enum": [
                    "on_demand"
                ],
                "type": "string",
                "description": "* `on_demand` - on_demand"
            },
            "ProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of progress report'."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'. The default is 'waiting'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the progress report."
                    }
                }
            },
            "PublicationResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    }
                }
            },
            "PulpExport": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "full": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": true,
                        "description": "Do a Full (true) or Incremental (false) export."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "Generate report on what would be exported and disk-space required."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit repo-version hrefs to export (replaces current_version)."
                    },
                    "chunk_size": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Chunk export-tarfile into pieces of chunk_size bytes. Recognizes units of B/KB/MB/GB/TB. A chunk has a maximum size of 1TB."
                    },
                    "start_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit last-exported-repo-version hrefs (replaces last_export)."
                    }
                }
            },
            "PulpExportResponse": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    },
                    "output_file_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Dictionary of filename: sha256hash entries for export-output-file(s)"
                    },
                    "toc_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Filename and sha256-checksum of table-of-contents for this export"
                    }
                }
            },
            "PulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpExporterResponse": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpImport": {
                "type": "object",
                "description": "Serializer for call to import into Pulp.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "create_repositories": {
                        "type": "boolean",
                        "default": false,
                        "description": "If True, missing repositories will be automatically created during the import."
                    }
                }
            },
            "PulpImportCheck": {
                "type": "object",
                "description": "Check validity of provided import-options.\n\nProvides the ability to check that an import is 'sane' without having to actually\ncreate an importer.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export-tar-gz that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "repo_mapping": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PulpImportCheckResponse": {
                "type": "object",
                "description": "Return the response to a PulpImport import-check call.",
                "properties": {
                    "toc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'toc' file for PulpImport"
                    },
                    "path": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'path' file for PulpImport"
                    },
                    "repo_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'repo_mapping' file for PulpImport"
                    }
                }
            },
            "PulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PulpImporterResponse": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Purge": {
                "type": "object",
                "properties": {
                    "finished_before": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2024-08-13",
                        "description": "Purge tasks completed earlier than this timestamp. Format '%Y-%m-%d[T%H:%M:%S]'"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatesEnum"
                        },
                        "default": [
                            "completed"
                        ],
                        "description": "List of task-states to be purged. Only 'final' states are allowed."
                    }
                }
            },
            "RBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RBACContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        },
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReclaimSpace": {
                "type": "object",
                "description": "Serializer for reclaim disk space operation.",
                "properties": {
                    "repo_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will reclaim space for the specified list of repos. Use ['*'] to specify all repos."
                    },
                    "repo_versions_keeplist": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Will exclude repo versions from space reclaim."
                    }
                },
                "required": [
                    "repo_hrefs"
                ]
            },
            "RecursiveManage": {
                "type": "object",
                "description": "Serializer for adding and removing content to/from a Container repository.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to operate on."
                    }
                }
            },
            "RedisConnectionResponse": {
                "type": "object",
                "description": "Serializer for information about the Redis connection",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to Redis"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "RemoteResponse": {
                "type": "object",
                "description": "Every remote defined by a plugin should have a Remote serializer that inherits from this\nclass. Please import from `pulpcore.plugin.serializers` rather than from this module directly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RemoteResponsePolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "RemoteResponsePolicyEnum": {
                "enum": [
                    "immediate",
                    "When syncing, download all metadata and content now."
                ],
                "type": "string",
                "description": "* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
            },
            "RemoveImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the image removal.",
                "properties": {
                    "digest": {
                        "type": "string",
                        "minLength": 1,
                        "description": "sha256 of the Manifest file"
                    }
                },
                "required": [
                    "digest"
                ]
            },
            "RemoveSignatures": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the signatures removal.",
                "properties": {
                    "signed_with_key_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "key_id of the key the signatures were produced with"
                    }
                },
                "required": [
                    "signed_with_key_id"
                ]
            },
            "RemoveSignaturesResponse": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the signatures removal.",
                "properties": {
                    "signed_with_key_id": {
                        "type": "string",
                        "description": "key_id of the key the signatures were produced with"
                    }
                },
                "required": [
                    "signed_with_key_id"
                ]
            },
            "Repair": {
                "type": "object",
                "properties": {
                    "verify_checksums": {
                        "type": "boolean",
                        "default": true,
                        "description": "Will verify that the checksum of all stored files matches what saved in the database. Otherwise only the existence of the files will be checked. Enabled by default"
                    }
                }
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositoryResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RepositorySign": {
                "type": "object",
                "description": "Serializer for container images signing.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A signing service to sign with. This will override a signing service set on the repo."
                    },
                    "future_base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Future base path content will be distributed at for sync repos"
                    },
                    "tags_list": {
                        "type": "array",
                        "items": {},
                        "description": "A list of tags to sign."
                    }
                }
            },
            "RepositorySyncURL": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "Role": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleResponse": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    },
                    "locked": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the role is system managed."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RpmRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for RPM Sync.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "DEPRECATED: If ``True``, ``sync_policy`` will default to 'mirror_complete' instead of 'additive'."
                    },
                    "sync_policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SyncPolicyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "Options: 'additive', 'mirror_complete', 'mirror_content_only'. Default: 'additive'. Modifies how the sync is performed. 'mirror_complete' will clone the original metadata and create an automatic publication from it, but comes with some limitations and does not work for certain repositories. 'mirror_content_only' will change the repository contents to match the remote but the metadata will be regenerated and will not be bit-for-bit identical. 'additive' will retain the existing contents of the repository and add the contents of the repository being synced.\n\n* `additive` - additive\n* `mirror_complete` - mirror_complete\n* `mirror_content_only` - mirror_content_only"
                    },
                    "skip_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkipTypesEnum"
                        },
                        "default": [],
                        "description": "List of content types to skip during sync."
                    },
                    "optimize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to optimize sync."
                    }
                }
            },
            "SetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SigningServiceResponse": {
                "type": "object",
                "description": "A serializer for the model declaring a signing service.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name used to recognize a script."
                    },
                    "public_key": {
                        "type": "string",
                        "description": "The value of a public key used for the repository verification."
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the public key."
                    },
                    "script": {
                        "type": "string",
                        "description": "An absolute path to a script which is going to be used for the signing."
                    }
                },
                "required": [
                    "name",
                    "pubkey_fingerprint",
                    "public_key",
                    "script"
                ]
            },
            "SkipTypesEnum": {
                "enum": [
                    "srpm",
                    "treeinfo"
                ],
                "type": "string",
                "description": "* `srpm` - srpm\n* `treeinfo` - treeinfo"
            },
            "StatesEnum": {
                "enum": [
                    "skipped",
                    "completed",
                    "failed",
                    "canceled"
                ],
                "type": "string",
                "description": "* `skipped` - skipped\n* `completed` - completed\n* `failed` - failed\n* `canceled` - canceled"
            },
            "StatusResponse": {
                "type": "object",
                "description": "Serializer for the status information of the app",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionResponse"
                        },
                        "description": "Version information of Pulp components"
                    },
                    "online_workers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        },
                        "description": "List of online workers known to the application. An online worker is actively heartbeating and can respond to new work."
                    },
                    "online_api_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiAppStatusResponse"
                        },
                        "description": "List of online api apps known to the application. An online api app is actively heartbeating and can serve the rest api to clients."
                    },
                    "online_content_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentAppStatusResponse"
                        },
                        "description": "List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients."
                    },
                    "database_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DatabaseConnectionResponse"
                            }
                        ],
                        "description": "Database connection information"
                    },
                    "redis_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RedisConnectionResponse"
                            }
                        ],
                        "description": "Redis connection information"
                    },
                    "storage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageResponse"
                            }
                        ],
                        "description": "Storage information"
                    },
                    "content_settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSettingsResponse"
                            }
                        ],
                        "description": "Content-app settings"
                    },
                    "domain_enabled": {
                        "type": "boolean",
                        "description": "Is Domains enabled"
                    }
                },
                "required": [
                    "content_settings",
                    "database_connection",
                    "domain_enabled",
                    "online_api_apps",
                    "online_content_apps",
                    "online_workers",
                    "versions"
                ]
            },
            "StorageClassEnum": {
                "enum": [
                    "pulpcore.app.models.storage.FileSystem",
                    "storages.backends.s3boto3.S3Boto3Storage",
                    "storages.backends.azure_storage.AzureStorage"
                ],
                "type": "string",
                "description": "* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
            },
            "StorageResponse": {
                "type": "object",
                "description": "Serializer for information about the storage system",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of bytes",
                        "minimum": 0
                    },
                    "used": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of bytes in use",
                        "minimum": 0
                    },
                    "free": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of free bytes",
                        "minimum": 0
                    }
                },
                "required": [
                    "free",
                    "total",
                    "used"
                ]
            },
            "SyncPolicyEnum": {
                "enum": [
                    "additive",
                    "mirror_complete",
                    "mirror_content_only"
                ],
                "type": "string",
                "description": "* `additive` - additive\n* `mirror_complete` - mirror_complete\n* `mirror_content_only` - mirror_content_only"
            },
            "TagCopy": {
                "type": "object",
                "description": "Serializer for copying tags from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "title": "Repository",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "names": {
                        "type": "array",
                        "items": {},
                        "description": "A list of tag names to copy."
                    }
                }
            },
            "TagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest tagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A tag name",
                        "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$"
                    },
                    "digest": {
                        "type": "string",
                        "minLength": 1,
                        "description": "sha256 of the Manifest file"
                    }
                },
                "required": [
                    "digest",
                    "tag"
                ]
            },
            "TaskGroupOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations that return a task group.",
                "properties": {
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task group."
                    }
                },
                "required": [
                    "task_group"
                ]
            },
            "TaskGroupResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the task group."
                    },
                    "all_tasks_dispatched": {
                        "type": "boolean",
                        "description": "Whether all tasks have been spawned for this task group."
                    },
                    "waiting": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'waiting' state"
                    },
                    "skipped": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'skipped' state"
                    },
                    "running": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'running' state"
                    },
                    "completed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'completed' state"
                    },
                    "canceled": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceled' state"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'failed' state"
                    },
                    "canceling": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceling' state"
                    },
                    "group_progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MinimalTaskResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "all_tasks_dispatched",
                    "description"
                ]
            },
            "TaskResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "logging_cid": {
                        "type": "string",
                        "description": "The logging correlation id associated with this task"
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User who dispatched this task."
                    },
                    "unblocked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task was identified ready for pickup."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task stopped execution."
                    },
                    "error": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "A JSON Object of a fatal error encountered during the execution of this task."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    },
                    "parent_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parent task that spawned this task."
                    },
                    "child_tasks": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Any tasks spawned by this task."
                    },
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task group that this task is a member of."
                    },
                    "progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "created_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources created by this task."
                    },
                    "reserved_resources_record": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "A list of resources required by that task."
                    }
                },
                "required": [
                    "logging_cid",
                    "name"
                ]
            },
            "TaskScheduleResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the task schedule."
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the task to be scheduled."
                    },
                    "dispatch_interval": {
                        "type": "string",
                        "nullable": true,
                        "description": "Periodicity of the schedule."
                    },
                    "next_dispatch": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Timestamp of the next time the task will be dispatched."
                    },
                    "last_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The last task dispatched by this schedule."
                    }
                },
                "required": [
                    "dispatch_interval",
                    "name",
                    "task_name"
                ]
            },
            "UnTagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest untagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A tag name",
                        "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$"
                    }
                },
                "required": [
                    "tag"
                ]
            },
            "UnsetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "UnsetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            },
            "Upload": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadChunk": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "A chunk of the uploaded file."
                    },
                    "sha256": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the chunk if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "UploadChunkResponse": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "UploadCommit": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected sha256 checksum for the file."
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "UploadDetailResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    },
                    "chunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadChunkResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "UpstreamPulpResponse": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "User": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Users password. Set to ``null`` to disable password authentication."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserGroup": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserGroupResponse": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserResponse": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Date joined"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserGroupResponse"
                        },
                        "readOnly": true
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserRole": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "UserRoleResponse": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "VariantResponse": {
                "type": "object",
                "description": "Variant serializer.",
                "properties": {
                    "variant_id": {
                        "type": "string",
                        "description": "Variant id."
                    },
                    "uid": {
                        "type": "string",
                        "description": "Variant uid."
                    },
                    "name": {
                        "type": "string",
                        "description": "Variant name."
                    },
                    "type": {
                        "type": "string",
                        "description": "Variant type."
                    },
                    "packages": {
                        "type": "string",
                        "description": "Relative path to directory with binary RPMs."
                    },
                    "source_packages": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to directory with source RPMs."
                    },
                    "source_repository": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to YUM repository with source RPMs."
                    },
                    "debug_packages": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to directory with debug RPMs."
                    },
                    "debug_repository": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to YUM repository with debug RPMs."
                    },
                    "identity": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to a pem file that identifies a product."
                    }
                },
                "required": [
                    "debug_packages",
                    "debug_repository",
                    "identity",
                    "name",
                    "packages",
                    "source_packages",
                    "source_repository",
                    "type",
                    "uid",
                    "variant_id"
                ]
            },
            "VersionResponse": {
                "type": "object",
                "description": "Serializer for the version information of Pulp components",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Name of a versioned component of Pulp"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the component (e.g. 3.0.0)"
                    },
                    "package": {
                        "type": "string",
                        "description": "Python package name providing the component"
                    },
                    "module": {
                        "type": "string",
                        "description": "Python module name of the component"
                    },
                    "domain_compatible": {
                        "type": "boolean",
                        "description": "Domain feature compatibility of component"
                    }
                },
                "required": [
                    "component",
                    "domain_compatible",
                    "module",
                    "package",
                    "version"
                ]
            },
            "WorkerResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    },
                    "current_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task this worker is currently executing, or empty if the worker is not currently assigned to a task."
                    }
                }
            },
            "certguard.RHSMCertGuard": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.RHSMCertGuardResponse": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.X509CertGuard": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.X509CertGuardResponse": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "container.BlobResponse": {
                "type": "object",
                "description": "Serializer for Blobs.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Blob file"
                    }
                },
                "required": [
                    "artifact",
                    "digest"
                ]
            },
            "container.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerDistributionResponse": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "registry_path": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Registry hostname/name/ to use with docker pull command defined by this distribution."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "namespace": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Namespace this distribution belongs to."
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerNamespace": {
                "type": "object",
                "description": "Serializer for ContainerNamespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerNamespaceResponse": {
                "type": "object",
                "description": "Serializer for ContainerNamespaces.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerPullThroughDistribution": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name",
                    "remote"
                ]
            },
            "container.ContainerPullThroughDistributionResponse": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "namespace": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Namespace this distribution belongs to."
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name",
                    "remote"
                ]
            },
            "container.ContainerPullThroughRemote": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "container.ContainerPullThroughRemoteResponse": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "container.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerPushRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        \n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "upstream_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the upstream repository"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    },
                    "sigstore": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A URL to a sigstore to download image signatures from",
                        "format": "uri"
                    }
                },
                "required": [
                    "name",
                    "upstream_name",
                    "url"
                ]
            },
            "container.ContainerRemoteResponse": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        \n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "upstream_name": {
                        "type": "string",
                        "description": "Name of the upstream repository"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    },
                    "sigstore": {
                        "type": "string",
                        "description": "A URL to a sigstore to download image signatures from",
                        "format": "uri"
                    }
                },
                "required": [
                    "name",
                    "upstream_name",
                    "url"
                ]
            },
            "container.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ManifestResponse": {
                "type": "object",
                "description": "Serializer for Manifests.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Manifest file"
                    },
                    "schema_version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Manifest schema version"
                    },
                    "media_type": {
                        "type": "string",
                        "description": "Manifest media type of the file"
                    },
                    "listed_manifests": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Manifests that are referenced by this Manifest List"
                    },
                    "config_blob": {
                        "type": "string",
                        "format": "uri",
                        "description": "Blob that contains configuration for this Manifest"
                    },
                    "blobs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Blobs that are referenced by this Manifest"
                    },
                    "annotations": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Property that contains arbitrary metadata stored inside the image manifest."
                    },
                    "labels": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Property describing metadata stored inside the image configuration"
                    },
                    "is_bootable": {
                        "type": "boolean",
                        "default": false,
                        "description": "A boolean determining whether users can boot from an image or not."
                    },
                    "is_flatpak": {
                        "type": "boolean",
                        "default": false,
                        "description": "A boolean determining whether the image bundles a Flatpak application"
                    }
                },
                "required": [
                    "blobs",
                    "digest",
                    "listed_manifests",
                    "media_type",
                    "schema_version"
                ]
            },
            "container.ManifestSignatureResponse": {
                "type": "object",
                "description": "Serializer for image manifest signatures.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Signature name in the format of `digest_algo:manifest_digest@random_32_chars`"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 digest of the signature blob"
                    },
                    "type": {
                        "type": "string",
                        "description": "Container signature type, e.g. 'atomic'"
                    },
                    "key_id": {
                        "type": "string",
                        "description": "Signing key ID"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of a signature"
                    },
                    "creator": {
                        "type": "string",
                        "description": "Signature creator"
                    },
                    "signed_manifest": {
                        "type": "string",
                        "format": "uri",
                        "description": "Manifest that is signed"
                    }
                },
                "required": [
                    "creator",
                    "digest",
                    "key_id",
                    "name",
                    "signed_manifest",
                    "timestamp",
                    "type"
                ]
            },
            "container.TagResponse": {
                "type": "object",
                "description": "Serializer for Tags.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    },
                    "tagged_manifest": {
                        "type": "string",
                        "format": "uri",
                        "description": "Manifest that is tagged"
                    }
                },
                "required": [
                    "name",
                    "tagged_manifest"
                ]
            },
            "deb.AptDistribution": {
                "type": "object",
                "description": "Serializer for AptDistributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "deb.AptDistributionResponse": {
                "type": "object",
                "description": "Serializer for AptDistributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "deb.AptPublication": {
                "type": "object",
                "description": "A Serializer for AptPublication.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "simple": {
                        "type": "boolean",
                        "default": false,
                        "description": "Activate simple publishing mode (all packages in one release component)."
                    },
                    "structured": {
                        "type": "boolean",
                        "default": true,
                        "description": "Activate structured publishing mode."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "Sign Release files with this signing key"
                    },
                    "publish_upstream_release_fields": {
                        "type": "boolean"
                    }
                }
            },
            "deb.AptPublicationResponse": {
                "type": "object",
                "description": "A Serializer for AptPublication.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "simple": {
                        "type": "boolean",
                        "default": false,
                        "description": "Activate simple publishing mode (all packages in one release component)."
                    },
                    "structured": {
                        "type": "boolean",
                        "default": true,
                        "description": "Activate structured publishing mode."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "Sign Release files with this signing key"
                    },
                    "publish_upstream_release_fields": {
                        "type": "boolean"
                    }
                }
            },
            "deb.AptRemote": {
                "type": "object",
                "description": "A Serializer for AptRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "distributions": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Whitespace separated list of distributions to sync.\nThe distribution is the path from the repository root to the \"Release\" file you want to access. This is often, but not always, equal to either the codename or the suite of the release you want to sync. If the repository you are trying to sync uses \"flat repository format\", the distribution must end with a \"/\". Based on \"/etc/apt/sources.list\" syntax."
                    },
                    "components": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Whitespace separatet list of components to sync.\nIf none are supplied, all that are available will be synchronized. Leave blank for repositores using \"flat repository format\"."
                    },
                    "architectures": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Whitespace separated list of architectures to sync\nIf none are supplied, all that are available will be synchronized. A list of valid architecture specification strings can be found by running \"dpkg-architecture -L\". A sync will download the intersection of the list of architectures provided via this field and those provided by the relevant \"Release\" file. Architecture=\"all\" is always synchronized and does not need to be provided here."
                    },
                    "sync_sources": {
                        "type": "boolean",
                        "description": "Sync source packages"
                    },
                    "sync_udebs": {
                        "type": "boolean",
                        "description": "Sync installer packages"
                    },
                    "sync_installer": {
                        "type": "boolean",
                        "description": "Sync installer files"
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify origin releases against"
                    },
                    "ignore_missing_package_indices": {
                        "type": "boolean",
                        "description": "By default, upstream repositories that declare architectures and corresponding package indices in their Release files without actually publishing them, will fail to synchronize.\nSet this flag to True to allow the synchronization of such \"partial mirrors\" instead.\nAlternatively, you could make your remote filter by architectures for which the upstream repository does have indices."
                    }
                },
                "required": [
                    "distributions",
                    "name",
                    "url"
                ]
            },
            "deb.AptRemoteResponse": {
                "type": "object",
                "description": "A Serializer for AptRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "distributions": {
                        "type": "string",
                        "description": "Whitespace separated list of distributions to sync.\nThe distribution is the path from the repository root to the \"Release\" file you want to access. This is often, but not always, equal to either the codename or the suite of the release you want to sync. If the repository you are trying to sync uses \"flat repository format\", the distribution must end with a \"/\". Based on \"/etc/apt/sources.list\" syntax."
                    },
                    "components": {
                        "type": "string",
                        "nullable": true,
                        "description": "Whitespace separatet list of components to sync.\nIf none are supplied, all that are available will be synchronized. Leave blank for repositores using \"flat repository format\"."
                    },
                    "architectures": {
                        "type": "string",
                        "nullable": true,
                        "description": "Whitespace separated list of architectures to sync\nIf none are supplied, all that are available will be synchronized. A list of valid architecture specification strings can be found by running \"dpkg-architecture -L\". A sync will download the intersection of the list of architectures provided via this field and those provided by the relevant \"Release\" file. Architecture=\"all\" is always synchronized and does not need to be provided here."
                    },
                    "sync_sources": {
                        "type": "boolean",
                        "description": "Sync source packages"
                    },
                    "sync_udebs": {
                        "type": "boolean",
                        "description": "Sync installer packages"
                    },
                    "sync_installer": {
                        "type": "boolean",
                        "description": "Sync installer files"
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "description": "Gpg public key to verify origin releases against"
                    },
                    "ignore_missing_package_indices": {
                        "type": "boolean",
                        "description": "By default, upstream repositories that declare architectures and corresponding package indices in their Release files without actually publishing them, will fail to synchronize.\nSet this flag to True to allow the synchronization of such \"partial mirrors\" instead.\nAlternatively, you could make your remote filter by architectures for which the upstream repository does have indices."
                    }
                },
                "required": [
                    "distributions",
                    "name",
                    "url"
                ]
            },
            "deb.AptRepository": {
                "type": "object",
                "description": "A Serializer for AptRepository.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "publish_upstream_release_fields": {
                        "type": "boolean",
                        "description": "Previously, pulp_deb only synced the Release file fields codename and suite, now version, origin, label, and description are also synced. Setting this setting to False will make Pulp revert to the old behaviour of using it's own internal values for the new fields during publish. This is primarily intended to avoid a sudden change in behaviour for existing Pulp repositories, since many Release file field changes need to be accepted by hosts consuming the published repository. The default for new repositories is True."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service. Used if AptPublication.signing_service is not set"
                    },
                    "signing_service_release_overrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "A dictionary of Release distributions and the Signing Service URLs they should use.Example: {\"bionic\": \"/pulp/api/v3/signing-services/433a1f70-c589-4413-a803-c50b842ea9b5/\"}"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "deb.AptRepositoryResponse": {
                "type": "object",
                "description": "A Serializer for AptRepository.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "publish_upstream_release_fields": {
                        "type": "boolean",
                        "description": "Previously, pulp_deb only synced the Release file fields codename and suite, now version, origin, label, and description are also synced. Setting this setting to False will make Pulp revert to the old behaviour of using it's own internal values for the new fields during publish. This is primarily intended to avoid a sudden change in behaviour for existing Pulp repositories, since many Release file field changes need to be accepted by hosts consuming the published repository. The default for new repositories is True."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service. Used if AptPublication.signing_service is not set"
                    },
                    "signing_service_release_overrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "A dictionary of Release distributions and the Signing Service URLs they should use.Example: {\"bionic\": \"/pulp/api/v3/signing-services/433a1f70-c589-4413-a803-c50b842ea9b5/\"}"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "deb.GenericContent": {
                "type": "object",
                "description": "A serializer for GenericContent.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "deb.GenericContentResponse": {
                "type": "object",
                "description": "A serializer for GenericContent.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "deb.InstallerFileIndex": {
                "type": "object",
                "description": "A serializer for InstallerFileIndex.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "component": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Component of the component - architecture combination."
                    },
                    "architecture": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Architecture of the component - architecture combination."
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path of directory containing MD5SUMS and SHA256SUMS relative to url."
                    }
                },
                "required": [
                    "architecture",
                    "artifacts",
                    "component"
                ]
            },
            "deb.InstallerFileIndexResponse": {
                "type": "object",
                "description": "A serializer for InstallerFileIndex.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "component": {
                        "type": "string",
                        "description": "Component of the component - architecture combination."
                    },
                    "architecture": {
                        "type": "string",
                        "description": "Architecture of the component - architecture combination."
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path of directory containing MD5SUMS and SHA256SUMS relative to url."
                    }
                },
                "required": [
                    "architecture",
                    "artifacts",
                    "component"
                ]
            },
            "deb.InstallerPackage": {
                "type": "object",
                "description": "A Serializer for InstallerPackage.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                }
            },
            "deb.InstallerPackageResponse": {
                "type": "object",
                "description": "A Serializer for InstallerPackage.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "package": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "type": "string",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "architecture": {
                        "type": "string",
                        "readOnly": true
                    },
                    "section": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "type": "string",
                        "readOnly": true
                    },
                    "origin": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bugs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "essential": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_essential": {
                        "type": "string",
                        "readOnly": true
                    },
                    "installed_size": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maintainer": {
                        "type": "string",
                        "readOnly": true
                    },
                    "original_maintainer": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description_md5": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "built_using": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_built_package": {
                        "type": "string",
                        "readOnly": true
                    },
                    "multi_arch": {
                        "type": "string",
                        "readOnly": true
                    },
                    "breaks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "conflicts": {
                        "type": "string",
                        "readOnly": true
                    },
                    "depends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "recommends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "suggests": {
                        "type": "string",
                        "readOnly": true
                    },
                    "enhances": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pre_depends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "provides": {
                        "type": "string",
                        "readOnly": true
                    },
                    "replaces": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "deb.Package": {
                "type": "object",
                "description": "A Serializer for Package.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "distribution": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the distribution."
                    },
                    "component": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the component."
                    }
                }
            },
            "deb.PackageIndex": {
                "type": "object",
                "description": "A serializer for PackageIndex.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "component": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Component of the component - architecture combination."
                    },
                    "architecture": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Architecture of the component - architecture combination."
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "deb.PackageIndexResponse": {
                "type": "object",
                "description": "A serializer for PackageIndex.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "component": {
                        "type": "string",
                        "description": "Component of the component - architecture combination."
                    },
                    "architecture": {
                        "type": "string",
                        "description": "Architecture of the component - architecture combination."
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "deb.PackageReleaseComponent": {
                "type": "object",
                "description": "A Serializer for PackageReleaseComponent.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "package": {
                        "type": "string",
                        "format": "uri",
                        "description": "Package that is contained in release_comonent."
                    },
                    "release_component": {
                        "type": "string",
                        "format": "uri",
                        "description": "ReleaseComponent this package is contained in."
                    }
                },
                "required": [
                    "package",
                    "release_component"
                ]
            },
            "deb.PackageReleaseComponentResponse": {
                "type": "object",
                "description": "A Serializer for PackageReleaseComponent.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "package": {
                        "type": "string",
                        "format": "uri",
                        "description": "Package that is contained in release_comonent."
                    },
                    "release_component": {
                        "type": "string",
                        "format": "uri",
                        "description": "ReleaseComponent this package is contained in."
                    }
                },
                "required": [
                    "package",
                    "release_component"
                ]
            },
            "deb.PackageResponse": {
                "type": "object",
                "description": "A Serializer for Package.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Name of the distribution."
                    },
                    "component": {
                        "type": "string",
                        "description": "Name of the component."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "package": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "type": "string",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "architecture": {
                        "type": "string",
                        "readOnly": true
                    },
                    "section": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priority": {
                        "type": "string",
                        "readOnly": true
                    },
                    "origin": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bugs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "essential": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_essential": {
                        "type": "string",
                        "readOnly": true
                    },
                    "installed_size": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maintainer": {
                        "type": "string",
                        "readOnly": true
                    },
                    "original_maintainer": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description_md5": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "built_using": {
                        "type": "string",
                        "readOnly": true
                    },
                    "auto_built_package": {
                        "type": "string",
                        "readOnly": true
                    },
                    "multi_arch": {
                        "type": "string",
                        "readOnly": true
                    },
                    "breaks": {
                        "type": "string",
                        "readOnly": true
                    },
                    "conflicts": {
                        "type": "string",
                        "readOnly": true
                    },
                    "depends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "recommends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "suggests": {
                        "type": "string",
                        "readOnly": true
                    },
                    "enhances": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pre_depends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "provides": {
                        "type": "string",
                        "readOnly": true
                    },
                    "replaces": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "deb.Release": {
                "type": "object",
                "description": "A Serializer for Release.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "codename": {
                        "type": "string",
                        "minLength": 1
                    },
                    "suite": {
                        "type": "string",
                        "minLength": 1
                    },
                    "distribution": {
                        "type": "string",
                        "minLength": 1
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "origin": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "label": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "codename",
                    "distribution",
                    "suite"
                ]
            },
            "deb.ReleaseArchitecture": {
                "type": "object",
                "description": "A Serializer for ReleaseArchitecture.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "architecture": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the architecture."
                    },
                    "distribution": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the distribution."
                    }
                },
                "required": [
                    "architecture",
                    "distribution"
                ]
            },
            "deb.ReleaseArchitectureResponse": {
                "type": "object",
                "description": "A Serializer for ReleaseArchitecture.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "architecture": {
                        "type": "string",
                        "description": "Name of the architecture."
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Name of the distribution."
                    }
                },
                "required": [
                    "architecture",
                    "distribution"
                ]
            },
            "deb.ReleaseComponent": {
                "type": "object",
                "description": "A Serializer for ReleaseComponent.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "component": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the component."
                    },
                    "distribution": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the distribution."
                    }
                },
                "required": [
                    "component",
                    "distribution"
                ]
            },
            "deb.ReleaseComponentResponse": {
                "type": "object",
                "description": "A Serializer for ReleaseComponent.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "component": {
                        "type": "string",
                        "description": "Name of the component."
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Name of the distribution."
                    }
                },
                "required": [
                    "component",
                    "distribution"
                ]
            },
            "deb.ReleaseFile": {
                "type": "object",
                "description": "A serializer for ReleaseFile.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "codename": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Codename of the release, e.g. \"buster\"."
                    },
                    "suite": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Suite of the release, e.g. \"stable\"."
                    },
                    "distribution": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Distribution of the release, e.g. \"stable/updates\"."
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts",
                    "distribution"
                ]
            },
            "deb.ReleaseFileResponse": {
                "type": "object",
                "description": "A serializer for ReleaseFile.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "codename": {
                        "type": "string",
                        "description": "Codename of the release, e.g. \"buster\"."
                    },
                    "suite": {
                        "type": "string",
                        "description": "Suite of the release, e.g. \"stable\"."
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Distribution of the release, e.g. \"stable/updates\"."
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts",
                    "distribution"
                ]
            },
            "deb.ReleaseResponse": {
                "type": "object",
                "description": "A Serializer for Release.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "codename": {
                        "type": "string"
                    },
                    "suite": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "origin": {
                        "type": "string",
                        "nullable": true
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "codename",
                    "distribution",
                    "suite"
                ]
            },
            "deb.SourceIndex": {
                "type": "object",
                "description": "A serializer for SourceIndex.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "release": {
                        "type": "string",
                        "format": "uri",
                        "description": "Release this index file belongs to."
                    },
                    "component": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Component this index file belongs to."
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts",
                    "component",
                    "release"
                ]
            },
            "deb.SourceIndexResponse": {
                "type": "object",
                "description": "A serializer for SourceIndex.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "release": {
                        "type": "string",
                        "format": "uri",
                        "description": "Release this index file belongs to."
                    },
                    "component": {
                        "type": "string",
                        "description": "Component this index file belongs to."
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path of file relative to url."
                    }
                },
                "required": [
                    "artifacts",
                    "component",
                    "release"
                ]
            },
            "deb.SourcePackage": {
                "type": "object",
                "description": "A Serializer for DscFile.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "Artifact URL of the Debian Source Control (dsc) file."
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Relative path of the Debian Source Control (dsc) file.It is normally advised to let Pulp generate this."
                    }
                },
                "required": [
                    "artifact"
                ]
            },
            "deb.SourcePackageReleaseComponent": {
                "type": "object",
                "description": "A Serializer for SourcePackageReleaseComponent.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "source_package": {
                        "type": "string",
                        "format": "uri",
                        "description": "Source package that is contained in release_component."
                    },
                    "release_component": {
                        "type": "string",
                        "format": "uri",
                        "description": "ReleaseComponent this source package is contained in."
                    }
                },
                "required": [
                    "release_component",
                    "source_package"
                ]
            },
            "deb.SourcePackageReleaseComponentResponse": {
                "type": "object",
                "description": "A Serializer for SourcePackageReleaseComponent.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "source_package": {
                        "type": "string",
                        "format": "uri",
                        "description": "Source package that is contained in release_component."
                    },
                    "release_component": {
                        "type": "string",
                        "format": "uri",
                        "description": "ReleaseComponent this source package is contained in."
                    }
                },
                "required": [
                    "release_component",
                    "source_package"
                ]
            },
            "deb.SourcePackageResponse": {
                "type": "object",
                "description": "A Serializer for DscFile.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Relative path of the Debian Source Control (dsc) file.It is normally advised to let Pulp generate this."
                    },
                    "format": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "type": "string",
                        "readOnly": true
                    },
                    "binary": {
                        "type": "string",
                        "readOnly": true
                    },
                    "architecture": {
                        "type": "string",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maintainer": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uploaders": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_browser": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_arch": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_bzr": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_cvs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_darcs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_git": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_hg": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_mtn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vcs_snv": {
                        "type": "string",
                        "readOnly": true
                    },
                    "testsuite": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dgit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "standards_version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_depends": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_depends_indep": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_depends_arch": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_conflicts": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_conflicts_indep": {
                        "type": "string",
                        "readOnly": true
                    },
                    "build_conflicts_arch": {
                        "type": "string",
                        "readOnly": true
                    },
                    "package_list": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "deb.VerbatimPublication": {
                "type": "object",
                "description": "A Serializer for VerbatimPublication.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    }
                }
            },
            "deb.VerbatimPublicationResponse": {
                "type": "object",
                "description": "A Serializer for VerbatimPublication.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    }
                }
            },
            "file.FileAlternateContentSource": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "file.FileAlternateContentSourceResponse": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "file.FileContent": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileContentResponse": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FileDistributionResponse": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FilePublication": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FilePublicationResponse": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This publication is currently hosted as defined by these distributions."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRemoteResponse": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "file.FileRepositoryResponse": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "rpm.DistributionTreeResponse": {
                "type": "object",
                "description": "DistributionTree serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "header_version": {
                        "type": "string",
                        "description": "Header Version."
                    },
                    "release_name": {
                        "type": "string",
                        "description": "Release name."
                    },
                    "release_short": {
                        "type": "string",
                        "description": "Release short name."
                    },
                    "release_version": {
                        "type": "string",
                        "description": "Release version."
                    },
                    "release_is_layered": {
                        "type": "boolean",
                        "description": "Typically False for an operating system, True otherwise."
                    },
                    "base_product_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Base Product name."
                    },
                    "base_product_short": {
                        "type": "string",
                        "nullable": true,
                        "description": "Base Product short name."
                    },
                    "base_product_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Base Product version."
                    },
                    "arch": {
                        "type": "string",
                        "description": "Tree architecturerch."
                    },
                    "build_timestamp": {
                        "type": "number",
                        "format": "double",
                        "description": "Tree build time timestamp."
                    },
                    "instimage": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to Anaconda instimage."
                    },
                    "mainimage": {
                        "type": "string",
                        "nullable": true,
                        "description": "Relative path to Anaconda stage2 image."
                    },
                    "discnum": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Disc number."
                    },
                    "totaldiscs": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of discs in media set."
                    },
                    "addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddonResponse"
                        }
                    },
                    "checksums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChecksumResponse"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageResponse"
                        }
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VariantResponse"
                        }
                    }
                },
                "required": [
                    "addons",
                    "arch",
                    "base_product_name",
                    "base_product_short",
                    "base_product_version",
                    "build_timestamp",
                    "checksums",
                    "discnum",
                    "header_version",
                    "images",
                    "instimage",
                    "mainimage",
                    "release_is_layered",
                    "release_name",
                    "release_short",
                    "release_version",
                    "totaldiscs",
                    "variants"
                ]
            },
            "rpm.Modulemd": {
                "type": "object",
                "description": "Modulemd serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Stream name."
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd version."
                    },
                    "static_context": {
                        "type": "boolean",
                        "description": "Modulemd static-context flag."
                    },
                    "context": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd context."
                    },
                    "arch": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd architecture."
                    },
                    "artifacts": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd artifacts."
                    },
                    "dependencies": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd dependencies."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "Modulemd artifacts' packages."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Modulemd snippet"
                    },
                    "profiles": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd profiles."
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Description of module."
                    }
                },
                "required": [
                    "arch",
                    "artifacts",
                    "context",
                    "dependencies",
                    "description",
                    "name",
                    "profiles",
                    "snippet",
                    "stream",
                    "version"
                ]
            },
            "rpm.ModulemdDefaults": {
                "type": "object",
                "description": "ModulemdDefaults serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "module": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd default stream."
                    },
                    "profiles": {
                        "type": "object",
                        "description": "Default profiles for modulemd streams."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Modulemd default snippet"
                    }
                },
                "required": [
                    "module",
                    "profiles",
                    "snippet",
                    "stream"
                ]
            },
            "rpm.ModulemdDefaultsResponse": {
                "type": "object",
                "description": "ModulemdDefaults serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "module": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "description": "Modulemd default stream."
                    },
                    "profiles": {
                        "type": "object",
                        "description": "Default profiles for modulemd streams."
                    }
                },
                "required": [
                    "module",
                    "profiles",
                    "stream"
                ]
            },
            "rpm.ModulemdObsolete": {
                "type": "object",
                "description": "ModulemdObsolete serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "modified": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Obsolete modified time."
                    },
                    "module_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "module_stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd's stream."
                    },
                    "message": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Obsolete description."
                    },
                    "override_previous": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Reset previous obsoletes."
                    },
                    "module_context": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Modulemd's context."
                    },
                    "eol_date": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "End of Life date."
                    },
                    "obsoleted_by_module_name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Obsolete by module name."
                    },
                    "obsoleted_by_module_stream": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Obsolete by module stream."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Module Obsolete snippet."
                    }
                },
                "required": [
                    "eol_date",
                    "message",
                    "modified",
                    "module_context",
                    "module_name",
                    "module_stream",
                    "obsoleted_by_module_name",
                    "obsoleted_by_module_stream",
                    "override_previous",
                    "snippet"
                ]
            },
            "rpm.ModulemdObsoleteResponse": {
                "type": "object",
                "description": "ModulemdObsolete serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "modified": {
                        "type": "string",
                        "description": "Obsolete modified time."
                    },
                    "module_name": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "module_stream": {
                        "type": "string",
                        "description": "Modulemd's stream."
                    },
                    "message": {
                        "type": "string",
                        "description": "Obsolete description."
                    },
                    "override_previous": {
                        "type": "string",
                        "nullable": true,
                        "description": "Reset previous obsoletes."
                    },
                    "module_context": {
                        "type": "string",
                        "nullable": true,
                        "description": "Modulemd's context."
                    },
                    "eol_date": {
                        "type": "string",
                        "nullable": true,
                        "description": "End of Life date."
                    },
                    "obsoleted_by_module_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Obsolete by module name."
                    },
                    "obsoleted_by_module_stream": {
                        "type": "string",
                        "nullable": true,
                        "description": "Obsolete by module stream."
                    }
                },
                "required": [
                    "eol_date",
                    "message",
                    "modified",
                    "module_context",
                    "module_name",
                    "module_stream",
                    "obsoleted_by_module_name",
                    "obsoleted_by_module_stream",
                    "override_previous"
                ]
            },
            "rpm.ModulemdResponse": {
                "type": "object",
                "description": "Modulemd serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "description": "Stream name."
                    },
                    "version": {
                        "type": "string",
                        "description": "Modulemd version."
                    },
                    "static_context": {
                        "type": "boolean",
                        "description": "Modulemd static-context flag."
                    },
                    "context": {
                        "type": "string",
                        "description": "Modulemd context."
                    },
                    "arch": {
                        "type": "string",
                        "description": "Modulemd architecture."
                    },
                    "artifacts": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd artifacts."
                    },
                    "dependencies": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd dependencies."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "Modulemd artifacts' packages."
                    },
                    "profiles": {
                        "type": "object",
                        "nullable": true,
                        "description": "Modulemd profiles."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of module."
                    }
                },
                "required": [
                    "arch",
                    "artifacts",
                    "context",
                    "dependencies",
                    "description",
                    "name",
                    "profiles",
                    "stream",
                    "version"
                ]
            },
            "rpm.Package": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and add those fields to the Meta class\nkeeping fields from the parent class as well. Provide help_text.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                }
            },
            "rpm.PackageCategoryResponse": {
                "type": "object",
                "description": "PackageCategory serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "Category id."
                    },
                    "name": {
                        "type": "string",
                        "description": "Category name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Category description."
                    },
                    "display_order": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Category display order."
                    },
                    "group_ids": {
                        "type": "object",
                        "nullable": true,
                        "description": "Category group list."
                    },
                    "desc_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "Category description by language."
                    },
                    "name_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "Category name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "Category digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "group_ids",
                    "id",
                    "name",
                    "name_by_lang"
                ]
            },
            "rpm.PackageEnvironmentResponse": {
                "type": "object",
                "description": "PackageEnvironment serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "Environment id."
                    },
                    "name": {
                        "type": "string",
                        "description": "Environment name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Environment description."
                    },
                    "display_order": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Environment display order."
                    },
                    "group_ids": {
                        "type": "object",
                        "nullable": true,
                        "description": "Environment group list."
                    },
                    "option_ids": {
                        "type": "object",
                        "nullable": true,
                        "description": "Environment option ids"
                    },
                    "desc_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "Environment description by language."
                    },
                    "name_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "Environment name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "Environment digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "group_ids",
                    "id",
                    "name",
                    "name_by_lang",
                    "option_ids"
                ]
            },
            "rpm.PackageGroupResponse": {
                "type": "object",
                "description": "PackageGroup serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "PackageGroup id."
                    },
                    "default": {
                        "type": "boolean",
                        "description": "PackageGroup default."
                    },
                    "user_visible": {
                        "type": "boolean",
                        "description": "PackageGroup user visibility."
                    },
                    "display_order": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "PackageGroup display order."
                    },
                    "name": {
                        "type": "string",
                        "description": "PackageGroup name."
                    },
                    "description": {
                        "type": "string",
                        "description": "PackageGroup description."
                    },
                    "packages": {
                        "type": "object",
                        "nullable": true,
                        "description": "PackageGroup package list."
                    },
                    "biarch_only": {
                        "type": "boolean",
                        "description": "PackageGroup biarch only."
                    },
                    "desc_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "PackageGroup description by language."
                    },
                    "name_by_lang": {
                        "type": "object",
                        "nullable": true,
                        "description": "PackageGroup name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "PackageGroup digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "id",
                    "name",
                    "name_by_lang",
                    "packages"
                ]
            },
            "rpm.PackageLangpacksResponse": {
                "type": "object",
                "description": "PackageLangpacks serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "matches": {
                        "type": "object",
                        "nullable": true,
                        "description": "Langpacks matches."
                    },
                    "digest": {
                        "type": "string",
                        "nullable": true,
                        "description": "Langpacks digest."
                    }
                },
                "required": [
                    "digest",
                    "matches"
                ]
            },
            "rpm.PackageResponse": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and add those fields to the Meta class\nkeeping fields from the parent class as well. Provide help_text.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the package"
                    },
                    "epoch": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The package's epoch"
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the package. For example, '2.8.0'"
                    },
                    "release": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The release of a particular version of the package. e.g. '1.el7' or '3.f24'"
                    },
                    "arch": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The target architecture for a package.For example, 'x86_64', 'i686', or 'noarch'"
                    },
                    "pkgId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Checksum of the package file"
                    },
                    "checksum_type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Type of checksum, e.g. 'sha256', 'md5'"
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Short description of the packaged software"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "In-depth description of the packaged software"
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL with more information about the packaged software"
                    },
                    "changelogs": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Changelogs that package contains"
                    },
                    "files": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Files that package contains"
                    },
                    "requires": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package requires"
                    },
                    "provides": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package provides"
                    },
                    "conflicts": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package conflicts"
                    },
                    "obsoletes": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package obsoletes"
                    },
                    "suggests": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package suggests"
                    },
                    "enhances": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package enhances"
                    },
                    "recommends": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package recommends"
                    },
                    "supplements": {
                        "type": "object",
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package supplements"
                    },
                    "location_base": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Base location of this package"
                    },
                    "location_href": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Relative location of package to the repodata"
                    },
                    "rpm_buildhost": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Hostname of the system that built the package"
                    },
                    "rpm_group": {
                        "type": "string",
                        "readOnly": true,
                        "description": "RPM group (See: http://fedoraproject.org/wiki/RPMGroups)"
                    },
                    "rpm_license": {
                        "type": "string",
                        "readOnly": true,
                        "description": "License term applicable to the package software (GPLv2, etc.)"
                    },
                    "rpm_packager": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Person or persons responsible for creating the package"
                    },
                    "rpm_sourcerpm": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the source package (srpm) the package was built from"
                    },
                    "rpm_vendor": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the organization that produced the package"
                    },
                    "rpm_header_start": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "First byte of the header"
                    },
                    "rpm_header_end": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Last byte of the header"
                    },
                    "is_modular": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Flag to identify if the package is modular"
                    },
                    "size_archive": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Size, in bytes, of the archive portion of the original package file"
                    },
                    "size_installed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Total size, in bytes, of every file installed by this package"
                    },
                    "size_package": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Size, in bytes, of the package"
                    },
                    "time_build": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Time the package was built in seconds since the epoch"
                    },
                    "time_file": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The 'file' time attribute in the primary XML - file mtime in seconds since the epoch."
                    }
                }
            },
            "rpm.RepoMetadataFileResponse": {
                "type": "object",
                "description": "RepoMetadataFile serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Relative path of the file."
                    },
                    "data_type": {
                        "type": "string",
                        "description": "Metadata type."
                    },
                    "checksum_type": {
                        "type": "string",
                        "description": "Checksum type for the file."
                    },
                    "checksum": {
                        "type": "string",
                        "description": "Checksum for the file."
                    }
                },
                "required": [
                    "checksum",
                    "checksum_type",
                    "data_type",
                    "relative_path"
                ]
            },
            "rpm.RpmAlternateContentSource": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "rpm.RpmAlternateContentSourceResponse": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "rpm.RpmDistribution": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "rpm.RpmDistributionResponse": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "rpm.RpmPublication": {
                "type": "object",
                "description": "A Serializer for RpmPublication.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type used during repo publishes.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for metadata.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for packages.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_config": {
                        "type": "object",
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "rpm.RpmPublicationResponse": {
                "type": "object",
                "description": "A Serializer for RpmPublication.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type used during repo publishes.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for metadata.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for packages.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "sqlite_metadata": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false,
                        "description": "REMOVED: An option specifying whether Pulp should generate SQLite metadata. Not operation since pulp_rpm 3.25.0 release"
                    },
                    "repo_config": {
                        "type": "object",
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "rpm.RpmRemote": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sles_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Authentication token for SLES repositories."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.RpmRemoteResponse": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "sles_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "description": "Authentication token for SLES repositories."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.RpmRepository": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_config": {
                        "type": "object",
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "rpm.RpmRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "repo_gpgcheck": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata.",
                        "maximum": 1,
                        "minimum": 0
                    },
                    "sqlite_metadata": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false,
                        "description": "REMOVED: An option specifying whether Pulp should generate SQLite metadata. Not operation since pulp_rpm 3.25.0 release"
                    },
                    "repo_config": {
                        "type": "object",
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "rpm.UlnRemote": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account username."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account password."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "uln_server_base_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                },
                "required": [
                    "name",
                    "password",
                    "url",
                    "username"
                ]
            },
            "rpm.UlnRemoteResponse": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "uln_server_base_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.UpdateCollection": {
                "type": "object",
                "description": "A Serializer for UpdateCollection.",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Collection name."
                    },
                    "shortname": {
                        "type": "string",
                        "nullable": true,
                        "description": "Collection short name."
                    },
                    "module": {
                        "type": "object",
                        "nullable": true,
                        "description": "Collection modular NSVCA."
                    }
                },
                "required": [
                    "module",
                    "name",
                    "shortname"
                ]
            },
            "rpm.UpdateCollectionResponse": {
                "type": "object",
                "description": "A Serializer for UpdateCollection.",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Collection name."
                    },
                    "shortname": {
                        "type": "string",
                        "nullable": true,
                        "description": "Collection short name."
                    },
                    "module": {
                        "type": "object",
                        "nullable": true,
                        "description": "Collection modular NSVCA."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of packages"
                    }
                },
                "required": [
                    "module",
                    "name",
                    "shortname"
                ]
            },
            "rpm.UpdateRecord": {
                "type": "object",
                "description": "A Serializer for UpdateRecord.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                }
            },
            "rpm.UpdateRecordResponse": {
                "type": "object",
                "description": "A Serializer for UpdateRecord.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update id (short update name, e.g. RHEA-2013:1777)"
                    },
                    "updated_date": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Date when the update was updated (e.g. '2013-12-02 00:00:00')"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update description"
                    },
                    "issued_date": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Date when the update was issued (e.g. '2013-12-02 00:00:00')"
                    },
                    "fromstr": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Source of the update (e.g. security@redhat.com)"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update status ('final', ...)"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update name"
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Short summary"
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update version (probably always an integer number)"
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update type ('enhancement', 'bugfix', ...)"
                    },
                    "severity": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Severity"
                    },
                    "solution": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Solution"
                    },
                    "release": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update release"
                    },
                    "rights": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Copyrights"
                    },
                    "pushcount": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Push count"
                    },
                    "pkglist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UpdateCollectionResponse"
                        },
                        "readOnly": true,
                        "description": "List of packages"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of references"
                    },
                    "reboot_suggested": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Reboot suggested"
                    }
                }
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "servers": [
        {
            "url": "http://pulpcore-api/"
        }
    ]
}